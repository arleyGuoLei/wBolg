<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>前端私塾</title>
  
  <subtitle>学而不思则罔, 思而不学则殆.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.i7xy.cn/"/>
  <updated>2019-02-26T11:28:29.885Z</updated>
  <id>http://www.i7xy.cn/</id>
  
  <author>
    <name>Arley (郭磊)</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>webpack总结贴 - 持续更新</title>
    <link href="http://www.i7xy.cn/2019/02/25/webpack%E6%80%BB%E7%BB%93%E8%B4%B4-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/"/>
    <id>http://www.i7xy.cn/2019/02/25/webpack总结贴-持续更新/</id>
    <published>2019-02-25T11:46:02.000Z</published>
    <updated>2019-02-26T11:28:29.885Z</updated>
    
    <content type="html"><![CDATA[<p>笔记记录<code>webpack 4.x +</code>的学习及总结。</p><a id="more"></a><ol><li>安装</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm init -y <span class="comment">// 不提示问题, 直接初始化npm</span></span><br><span class="line">npm i webpack webpack-cli -D <span class="comment">// 4.x以上至少需要安装这两个包</span></span><br></pre></td></tr></table></figure><ol start="2"><li>定义配置文件</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">  <span class="string">"build"</span>: <span class="string">"webpack --config webpack.config.js"</span> <span class="comment">// 配置文件名, 执行npm run build</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认配置文件名在： node_modules/webpack-cli/bin/config-yargs.js 如下：</span></span><br><span class="line"><span class="comment">// defaultDescription: "webpack.config.js or webpackfile.js",</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>webpack的开发调试服务器安装： <code>npm i webpack-dev-server -D</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">devServer: &#123; <span class="comment">//开发服务器的配置</span></span><br><span class="line">    port: <span class="number">1997</span>,</span><br><span class="line">    progress: <span class="literal">true</span>,</span><br><span class="line">    contentBase: <span class="string">'./dist'</span>,</span><br><span class="line">    compress: <span class="literal">true</span>, <span class="comment">// 启用压缩</span></span><br><span class="line">    open: <span class="literal">true</span> <span class="comment">// 自动打开浏览器</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>htmlWebpackPlugin： <code>npm i html-webpack-plugin -D</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> htmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line">...</span><br><span class="line">plugins: [</span><br><span class="line">  <span class="keyword">new</span> htmlWebpackPlugin(&#123;</span><br><span class="line">    template: <span class="string">'./src/index.html'</span>, <span class="comment">// 打包模板</span></span><br><span class="line">    filename: <span class="string">'index.html'</span>, <span class="comment">// 输出的文件</span></span><br><span class="line">    minify: &#123;</span><br><span class="line">      removeAttributeQuotes: <span class="literal">true</span>, <span class="comment">//删除双引号</span></span><br><span class="line">      collapseWhitespace: <span class="literal">true</span> <span class="comment">// 压缩成一行</span></span><br><span class="line">    &#125;,</span><br><span class="line">    hash: <span class="literal">true</span></span><br><span class="line">  &#125;)</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ol start="5"><li>样式处理： <code>npm i style-loader stylus-loder stylus css-loader -D</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 打包的样式到html的header区</span></span><br><span class="line"><span class="built_in">module</span>: &#123;</span><br><span class="line">  rules: [</span><br><span class="line">    &#123;</span><br><span class="line">      test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">      <span class="comment">// 从下至上的顺序执行loader</span></span><br><span class="line">      use: [</span><br><span class="line">        &#123;</span><br><span class="line">          loader: <span class="string">'style-loader'</span>,</span><br><span class="line">          options: &#123;</span><br><span class="line">            insertAt: <span class="string">'top'</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'css-loader'</span></span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      test: <span class="regexp">/\.stylus$/</span>,</span><br><span class="line">      <span class="comment">// 从下至上的顺序执行loader</span></span><br><span class="line">      use: [</span><br><span class="line">        &#123;</span><br><span class="line">          loader: <span class="string">'style-loader'</span>,</span><br><span class="line">          options: &#123;</span><br><span class="line">            insertAt: <span class="string">'top'</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'css-loader'</span>,</span><br><span class="line">        <span class="string">'stylus-loader'</span></span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 打包的样式到一个单独的css文件</span></span><br><span class="line"><span class="comment">// npm i mini-css-extract-plugin -D</span></span><br><span class="line"><span class="keyword">const</span> miniCssExtractPlugin = <span class="built_in">require</span>(<span class="string">'mini-css-extract-plugin'</span>);</span><br><span class="line">plugins: [</span><br><span class="line">  <span class="keyword">new</span> miniCssExtractPlugin(&#123;</span><br><span class="line">    filename: <span class="string">'main.css'</span></span><br><span class="line">  &#125;)</span><br><span class="line">],</span><br><span class="line"><span class="built_in">module</span>: &#123;</span><br><span class="line">  rules: [</span><br><span class="line">    &#123;</span><br><span class="line">      test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">      <span class="comment">// 从下至上的顺序执行loader</span></span><br><span class="line">      use: [</span><br><span class="line">        miniCssExtractPlugin.loader, <span class="comment">// 替换原本的style-loader</span></span><br><span class="line">        <span class="string">'css-loader'</span></span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      test: <span class="regexp">/\.stylus$/</span>,</span><br><span class="line">      <span class="comment">// 从下至上的顺序执行loader</span></span><br><span class="line">      use: [</span><br><span class="line">        miniCssExtractPlugin.loader,</span><br><span class="line">        <span class="string">'css-loader'</span>,</span><br><span class="line">        <span class="string">'stylus-loader'</span></span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 样式添加前缀 - postCss</span></span><br><span class="line"><span class="comment">// npm i postcss-loader autoprefixer -D</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  test: <span class="regexp">/\.stylus$/</span>,</span><br><span class="line">  <span class="comment">// 从下至上的顺序执行loader</span></span><br><span class="line">  use: [</span><br><span class="line">    miniCssExtractPlugin.loader,</span><br><span class="line">    <span class="string">'css-loader'</span>,</span><br><span class="line">    <span class="string">'postcss-loader'</span>, <span class="comment">// 先postcss, 再css-loader</span></span><br><span class="line">    <span class="string">'stylus-loader'</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>ES6 -&gt; ES5: <code>npm i babel-loader @babel/core @babel/preset-env -D</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>: &#123;</span><br><span class="line">  rules: [&#123;</span><br><span class="line">      test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">      use: &#123;</span><br><span class="line">        loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">        options: &#123;</span><br><span class="line">          presets: [</span><br><span class="line">            <span class="string">'@babel/preset-env'</span></span><br><span class="line">          ],</span><br><span class="line">          plugins: [</span><br><span class="line">            <span class="comment">//  `npm i @babel/plugin-proposal-class-properties -D`</span></span><br><span class="line">            <span class="string">'@babel/plugin-proposal-class-properties'</span> <span class="comment">// 支持class转换</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="7"><li>打包img: <code>npm i file-loader url-loader -D</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>: &#123;</span><br><span class="line">  rules: [</span><br><span class="line">    &#123;</span><br><span class="line">      test: <span class="regexp">/\.(jpg|png|gif)$/</span>,</span><br><span class="line">      use: &#123;</span><br><span class="line">        loader: <span class="string">'url-loader'</span>,</span><br><span class="line">        options: &#123;</span><br><span class="line">          limit: <span class="number">1</span> <span class="comment">//  多少k以下转为base64</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;笔记记录&lt;code&gt;webpack 4.x +&lt;/code&gt;的学习及总结。&lt;/p&gt;
    
    </summary>
    
      <category term="前端构建" scheme="http://www.i7xy.cn/categories/%E5%89%8D%E7%AB%AF%E6%9E%84%E5%BB%BA/"/>
    
    
      <category term="学习笔记" scheme="http://www.i7xy.cn/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Webpack" scheme="http://www.i7xy.cn/tags/Webpack/"/>
    
      <category term="模块化开发" scheme="http://www.i7xy.cn/tags/%E6%A8%A1%E5%9D%97%E5%8C%96%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>mysql插入emoji表情</title>
    <link href="http://www.i7xy.cn/2019/01/28/mysql%E6%8F%92%E5%85%A5emoji%E8%A1%A8%E6%83%85/"/>
    <id>http://www.i7xy.cn/2019/01/28/mysql插入emoji表情/</id>
    <published>2019-01-28T12:18:59.000Z</published>
    <updated>2019-01-28T12:26:14.959Z</updated>
    
    <content type="html"><![CDATA[<p>emoji表情需要mysql5.5.3+版本,且<code>全局</code>编码为<code>utf8mb4</code> (只设置数据库和数据表的会失败!)</p><a id="more"></a><ol><li>安装 5.5.3+</li></ol><p><code>sudo apt-get install mysql-server mysql-client</code></p><ol start="2"><li>查看安装之后的默认账号和密码</li></ol><p><code>cat /etc/mysql/debian.cnf</code></p><ol start="3"><li>登录</li></ol><p><code>mysql -u 账号 -p</code></p><ol start="4"><li>修改root密码</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use mysql;</span><br><span class="line"></span><br><span class="line">mysql&gt; select host,user,plugin,authentication_string from user;  </span><br><span class="line"></span><br><span class="line">mysql&gt; update user set plugin="mysql_native_password",authentication_string=password('新密码') where user="root";</span><br><span class="line"></span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><ol start="5"><li>修改mysql配置文件my.cnf（windows为my.ini，linux为my.cnf）</li></ol><blockquote><p>my.cnf一般在etc/mysql/my.cnf位置。找到后请在以下三部分里添加如下内容：</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line">default-character-<span class="keyword">set</span> = utf8mb4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>-<span class="built_in">character</span>-<span class="keyword">set</span> = utf8mb4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"></span><br><span class="line"><span class="built_in">character</span>-<span class="keyword">set</span>-<span class="keyword">client</span>-handshake = <span class="literal">FALSE</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">character</span>-<span class="keyword">set</span>-<span class="keyword">server</span> = utf8mb4</span><br><span class="line"></span><br><span class="line"><span class="keyword">collation</span>-<span class="keyword">server</span> = utf8mb4_unicode_ci</span><br><span class="line"></span><br><span class="line">init_connect=<span class="string">'SET NAMES utf8mb4'</span></span><br></pre></td></tr></table></figure><ol start="6"><li>重启mysql数据库，重新查看字符集</li></ol><p><code>/etc/init.d/mysql restart</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">VARIABLES</span> <span class="keyword">WHERE</span> Variable_name <span class="keyword">LIKE</span> <span class="string">'character_set_%'</span> <span class="keyword">OR</span> Variable_name <span class="keyword">LIKE</span> <span class="string">'collation%'</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;emoji表情需要mysql5.5.3+版本,且&lt;code&gt;全局&lt;/code&gt;编码为&lt;code&gt;utf8mb4&lt;/code&gt; (只设置数据库和数据表的会失败!)&lt;/p&gt;
    
    </summary>
    
      <category term="其他" scheme="http://www.i7xy.cn/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="学习笔记" scheme="http://www.i7xy.cn/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>2-js中级面试题</title>
    <link href="http://www.i7xy.cn/2019/01/13/2-js%E4%B8%AD%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    <id>http://www.i7xy.cn/2019/01/13/2-js中级面试题/</id>
    <published>2019-01-13T13:22:17.000Z</published>
    <updated>2019-02-24T14:00:42.586Z</updated>
    
    <content type="html"><![CDATA[<h4 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h4><ol><li>易错</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">null</span> == undefinded <span class="comment">// true</span></span><br><span class="line"><span class="literal">NaN</span> == <span class="literal">NaN</span> <span class="comment">// false</span></span><br><span class="line"><span class="literal">null</span> <span class="keyword">instanceof</span> <span class="built_in">Object</span> <span class="comment">// false</span></span><br></pre></td></tr></table></figure><ol start="2"><li><p>除<code>空</code>之外的字符串,除<code>0</code>以外的数字,转换为<code>Boolean</code>都为true</p></li><li><p><code>eval()</code>:把一个字符串当做js代码执行</p></li><li><p><code>parseInt</code>: 转换字符串为整数, 如果含有字母,结果为<code>NaN</code>,转换小数或小数文本,直接舍去小数点后部分,转换其他类型的结果为<code>NaN</code></p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="built_in">parseInt</span>(<span class="string">"11"</span>,<span class="number">2</span>) <span class="comment">// 二进制转10 3</span></span><br><span class="line"><span class="keyword">let</span> b = <span class="built_in">parseInt</span>(<span class="string">"2019/01/13"</span>) <span class="comment">// 2019</span></span><br><span class="line"><span class="keyword">let</span> c = <span class="built_in">parseInt</span>(<span class="string">"02"</span>,<span class="number">10</span>) <span class="comment">// 2</span></span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="字符串拓展方法"><a href="#字符串拓展方法" class="headerlink" title="字符串拓展方法"></a>字符串拓展方法</h4><ol><li>给<code>String</code>拓展去除字符串左边空格功能</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">String</span>.prototype.trimLeft =<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.replace(<span class="regexp">/^\s+/g</span>,<span class="string">""</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删除首尾</span></span><br><span class="line">    <span class="comment">// this.replace(/(^\s+)|(s+$)/g,"")</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">" arley"</span>.trimLeft())</span><br></pre></td></tr></table></figure><h4 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h4><ol><li>apply方法</li></ol><blockquote><p>获取数组中的最大项和最小项</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">99</span>,<span class="number">991</span>,<span class="number">232</span>,<span class="number">11</span>,<span class="number">992</span>,<span class="number">-1997</span>]</span><br><span class="line"><span class="keyword">const</span> max = <span class="built_in">Math</span>.max.apply(<span class="literal">null</span>,arr) <span class="comment">// 992</span></span><br><span class="line"><span class="keyword">const</span> min = <span class="built_in">Math</span>.min.apply(<span class="literal">null</span>,arr) <span class="comment">// -1997</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">a)<span class="built_in">Math</span>.max 可以实现得到数组中最大的一项</span><br><span class="line"></span><br><span class="line">因为<span class="built_in">Math</span>.max 参数里面不支持<span class="built_in">Math</span>.max([param1,param2]) 也就是数组</span><br><span class="line"></span><br><span class="line">但是它支持<span class="built_in">Math</span>.max(param1,param2,param3…),所以可以根据刚才apply的那个特点来解决 <span class="keyword">var</span> max=<span class="built_in">Math</span>.max.apply(<span class="literal">null</span>,array),这样轻易的可以得到一个数组中最大的一项(apply会将一个数组装换为一个参数接一个参数的传递给方法)</span><br><span class="line"></span><br><span class="line">这块在调用的时候第一个参数给了一个<span class="literal">null</span>,这个是因为没有对象去调用这个方法,我只需要用这个方法帮我运算,得到返回的结果就行,.所以直接传递了一个<span class="literal">null</span>过去</span><br><span class="line"></span><br><span class="line">b)<span class="built_in">Math</span>.min  可以实现得到数组中最小的一项</span><br><span class="line"></span><br><span class="line">同样和 max是一个思想 <span class="keyword">var</span> min=<span class="built_in">Math</span>.min.apply(<span class="literal">null</span>,array);</span><br></pre></td></tr></table></figure><ol start="2"><li>判断是否为数组</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>,<span class="number">2</span>]</span><br><span class="line"><span class="keyword">const</span> str = <span class="string">"arley"</span></span><br><span class="line"><span class="keyword">const</span> obj = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(arr) === <span class="string">"[object Array]"</span>)</span><br><span class="line"><span class="built_in">console</span>.log(arr.constructor === <span class="built_in">Array</span>)</span><br><span class="line"><span class="built_in">console</span>.log(arr <span class="keyword">instanceof</span> <span class="built_in">Array</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(str) === <span class="string">"[object Array]"</span>)</span><br><span class="line"><span class="built_in">console</span>.log(str.constructor === <span class="built_in">Array</span>)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(obj) === <span class="string">"[object Array]"</span>)</span><br><span class="line"><span class="built_in">console</span>.log(obj.constructor === <span class="built_in">Array</span>)</span><br></pre></td></tr></table></figure><ol start="3"><li>删除数组某一项</li></ol><p>a. <code>splice(index,len,[item])</code>   注释：该方法会改变原始数组。<br>splice有3个参数，它也可以用来替换/删除/添加数组内某一个或者几个值<br>index:数组开始下标        len: 替换/删除的长度       item:替换的值，删除操作的话 item为空</p><p>b. <code>delete</code>: delete删除掉数组中的元素后，会把该下标出的值置为undefined,数组的长度不会变</p><ol start="4"><li>增加,删除元素</li></ol><ul><li>push: 尾+</li><li>pop: 尾-</li><li>unshift: 头+</li><li>shit: 头-</li></ul><ol start="5"><li>数组排序</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">11</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">arr = arr.sort(<span class="function">(<span class="params">v1,v2</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> v1-v2 <span class="comment">// 小到大排序</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h4><ol><li><code>arguments</code></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;表达式&quot;&gt;&lt;a href=&quot;#表达式&quot; class=&quot;headerlink&quot; title=&quot;表达式&quot;&gt;&lt;/a&gt;表达式&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;易错&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt; == undefinded &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;NaN&lt;/span&gt; == &lt;span class=&quot;literal&quot;&gt;NaN&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;&lt;p&gt;除&lt;code&gt;空&lt;/code&gt;之外的字符串,除&lt;code&gt;0&lt;/code&gt;以外的数字,转换为&lt;code&gt;Boolean&lt;/code&gt;都为true&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;eval()&lt;/code&gt;:把一个字符串当做js代码执行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;parseInt&lt;/code&gt;: 转换字符串为整数, 如果含有字母,结果为&lt;code&gt;NaN&lt;/code&gt;,转换小数或小数文本,直接舍去小数点后部分,转换其他类型的结果为&lt;code&gt;NaN&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; a = &lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;11&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// 二进制转10 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; b = &lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;2019/01/13&quot;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// 2019&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; c = &lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;02&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="面试江湖" scheme="http://www.i7xy.cn/categories/%E9%9D%A2%E8%AF%95%E6%B1%9F%E6%B9%96/"/>
    
    
      <category term="面试" scheme="http://www.i7xy.cn/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="JS" scheme="http://www.i7xy.cn/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>1.js初级面试题</title>
    <link href="http://www.i7xy.cn/2019/01/13/1-js%E5%88%9D%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    <id>http://www.i7xy.cn/2019/01/13/1-js初级面试题/</id>
    <published>2019-01-13T06:32:32.000Z</published>
    <updated>2019-02-24T14:00:50.996Z</updated>
    
    <content type="html"><![CDATA[<h4 id="关于js"><a href="#关于js" class="headerlink" title="关于js"></a>关于js</h4><ol><li>基于对象</li><li><code>&lt;script language=&quot;javascript&quot;&gt;&lt;/script&gt;</code></li><li><code>Firefox</code> 和 <code>IE</code>存在大量兼容性问题,其主要原因是他们对js的支持不同</li><li>ajax技术一定要使用JavaScript</li></ol><a id="more"></a><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><ol><li>截取<code>www.i7xy.cn</code>中的<code>i7xy</code>?</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">'www.i7xy.cn'</span></span><br><span class="line">str = str.substr(<span class="number">4</span>,<span class="number">4</span>) <span class="comment">// 开始,截取长度</span></span><br><span class="line"><span class="built_in">console</span>.log(str)</span><br></pre></td></tr></table></figure><ol start="2"><li>判断字符串,第一个必须为字母,后面可以是字母,数字,下划线,总长度为5~20</li></ol><blockquote><p>\w表示任意字母,数字,下划线; {n}匹配多少位</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> reg = <span class="regexp">/^[a-zA-Z]&#123;1&#125;\w&#123;4,19&#125;$/</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.test(<span class="string">'i7xy'</span>)) <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.test(<span class="string">'i7xy.cn'</span>)) <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.test(<span class="string">'7_i7xy'</span>)) <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.test(<span class="string">'i7xy_cn'</span>)) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.test(<span class="string">'i7xy_xx_666666666'</span>)) <span class="comment">// true</span></span><br></pre></td></tr></table></figure><ol start="3"><li>编写一个方法,求字符串长度</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> getLen = <span class="function"><span class="params">Str</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> Str.length</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(getLen(<span class="string">'abcde'</span>)) <span class="comment">// 5</span></span><br><span class="line"><span class="built_in">console</span>.log(getLen(<span class="string">'hello'</span>))</span><br><span class="line"><span class="built_in">console</span>.log(getLen(<span class="string">'i7xy'</span>)) <span class="comment">// 4</span></span><br><span class="line"><span class="built_in">console</span>.log(getLen(<span class="string">'arley'</span>))</span><br></pre></td></tr></table></figure><ol start="4"><li>找出字符串<code>arley_i7xy.cn_666</code>中的<code>i7xy</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> str = <span class="string">'arley_i7xy.cn_666'</span></span><br><span class="line"><span class="keyword">const</span> searchText = <span class="string">'i7xy'</span></span><br><span class="line"><span class="keyword">const</span> s1 = str.substring(str.indexOf(searchText),str.indexOf(searchText) + searchText.length)</span><br><span class="line"><span class="keyword">const</span> s2 = str.substr(str.indexOf(searchText),searchText.length)</span><br><span class="line"><span class="built_in">console</span>.log(s1,s2)</span><br></pre></td></tr></table></figure><ol start="5"><li>模拟PHP的<code>$_GET</code>方法,获取链接参数</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> $_GET = <span class="function">(<span class="params">name</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> url = <span class="string">'?name=arley&amp;age=18&amp;sex=superman'</span></span><br><span class="line">    <span class="comment">// const url = location.href.search</span></span><br><span class="line">    <span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"(^|&amp;)"</span> + name + <span class="string">"=([^&amp;]*)(&amp;|$)"</span>, <span class="string">"i"</span>)</span><br><span class="line">    <span class="keyword">var</span> r = url.substr(<span class="number">1</span>).match(reg)</span><br><span class="line">    <span class="built_in">console</span>.log(r) <span class="comment">// Array(4) ["name=arley&amp;", "", "arley", "&amp;"]</span></span><br><span class="line">    <span class="keyword">if</span> (r != <span class="literal">null</span>) <span class="keyword">return</span> <span class="built_in">unescape</span>(r[<span class="number">2</span>]) <span class="comment">// 返回解码的字符串</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log($_GET(<span class="string">'name'</span>))</span><br><span class="line"><span class="built_in">console</span>.log($_GET(<span class="string">'age'</span>))</span><br><span class="line"><span class="built_in">console</span>.log($_GET(<span class="string">'sex'</span>))</span><br></pre></td></tr></table></figure><blockquote><p>match匹配成功时会返回数组：</p><ul><li>如果正则为全局匹配，那么数组的第一个及以后元素存放的都是匹配的字符串，不再存放匹配的分组</li><li>如果正则不为全局匹配，那么数组的第一个元素存放的是匹配的字符串，第二个及以后元素存放的是匹配的分组</li></ul></blockquote><ol start="6"><li>删除一个字符串左边的空白字符</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> leftTrim = <span class="function"><span class="params">str</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> str.replace(<span class="regexp">/^\s*/g</span>,<span class="string">""</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(leftTrim(<span class="string">"  arley"</span>))</span><br><span class="line"><span class="built_in">console</span>.log(leftTrim(<span class="string">"  i7xy"</span>))</span><br></pre></td></tr></table></figure><ol start="7"><li><code>typeof</code>返回</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>(<span class="literal">null</span>)) <span class="comment">// object</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>(<span class="literal">undefined</span>)) <span class="comment">// undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>(<span class="string">"arley"</span>)) <span class="comment">// string</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>(<span class="string">"1"</span>===<span class="number">1</span>)) <span class="comment">// boolean</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>(<span class="number">1</span>)) <span class="comment">// number</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>(<span class="literal">NaN</span>)) <span class="comment">// number</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;)) <span class="comment">// function</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>([<span class="string">"a"</span>])) <span class="comment">// object</span></span><br><span class="line"><span class="keyword">const</span> arr = [<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>]</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>(arr)) <span class="comment">// object</span></span><br></pre></td></tr></table></figure><ol start="8"><li><p>“5”+3 = 53</p></li><li><p>字符串反转函数</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> revStr = <span class="function"><span class="params">str</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> str.split(<span class="string">''</span>).reverse().join(<span class="string">''</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(revStr(<span class="string">"abcde"</span>))</span><br></pre></td></tr></table></figure><h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h4><ol><li><code>全局变量</code>: 在当前页面内有效</li><li><code>undefined</code>由<code>null</code>派生而来,<code>undefinded</code>是声明了变量,但为赋值,<code>null</code>是找不到对象.</li></ol><h4 id="window的属性"><a href="#window的属性" class="headerlink" title="window的属性"></a>window的属性</h4><ol><li>js刷新页面</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location.reload(<span class="literal">true</span>) <span class="comment">// true 服务端获取刷新 , false 缓存中获取刷新</span></span><br><span class="line"></span><br><span class="line">location.replace(location.href)</span><br></pre></td></tr></table></figure><h4 id="元素"><a href="#元素" class="headerlink" title="元素"></a>元素</h4><ol><li>方法</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">appendChild() <span class="comment">// 添加节点</span></span><br><span class="line">removeChild() <span class="comment">// 移除节点</span></span><br><span class="line">cloneNode() <span class="comment">// 复制节点</span></span><br><span class="line">createElement() <span class="comment">// 创建元素</span></span><br><span class="line">createTextnode() <span class="comment">// 用指定的文本创建新的Element节点</span></span><br><span class="line">getElementById</span><br><span class="line">getElementsByTagName</span><br><span class="line">getElementsByName</span><br></pre></td></tr></table></figure><ol start="2"><li>追加元素</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">append()</span><br><span class="line"><span class="comment">// HTML代码为&lt;p&gt;I come from &lt;/p&gt;&lt;p&gt;I love  &lt;/p&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 向所有p标签中追加一个单词china，则写法为 $("p").append("china");</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 结果为：&lt;p&gt;I come from china&lt;/p&gt;&lt;p&gt;I love china &lt;/p&gt;</span></span><br><span class="line"></span><br><span class="line">appendTo()</span><br><span class="line"><span class="comment">// HTML代码为&lt;b&gt;I love china &lt;/b&gt;&lt;p&gt;&lt;/p&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 把标签b追加到p元素中，写法为$("b").appendTo("p");</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 结果为：&gt;&lt;p&gt;&lt;b&gt;I love china &lt;/b&gt;&lt;/p&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用appendTo这个方法是颠倒了常规的$(A).append(B)的操作，即不是把B追加到A中，而是把A追加到B中。</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">1.html方法，给元素添加html代码或者清空html代码（参数为空字符串）；</span></span><br><span class="line"><span class="comment">2.append向元素的末尾添加html代码；</span></span><br><span class="line"><span class="comment">3.appendTo这个方法跟append方法的很像，只是要添加的html代码的目标有所不一样；</span></span><br><span class="line"><span class="comment">4.after向元素的后边添加html代码，如果元素后面有元素了，那将后面的元素后移，然后将html代码插入；</span></span><br><span class="line"><span class="comment">5.before向元素的前边添加html代码，如果元素前面有元素了，那将前面的元素前移，然后将html代码插入；</span></span><br><span class="line"><span class="comment">6.insertAfter将JQuery封装好的元素插入到指定元素的后面，如果元素后面有元素了，那将后面的元素后移，然后将JQuery对象插入；</span></span><br><span class="line"><span class="comment">7.insertBefore将JQuery封装好的元素插入到指定元素的前面，如果元素前面有元素了，那将前面的元素前移，然后将JQuery对象插入；</span></span><br><span class="line"><span class="comment">8.empty清空元素内部的html代码，它只是清空内部的html代码，但是标记仍然留在DOM中；</span></span><br><span class="line"><span class="comment">9.remove从DOM中移除整个元素</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;关于js&quot;&gt;&lt;a href=&quot;#关于js&quot; class=&quot;headerlink&quot; title=&quot;关于js&quot;&gt;&lt;/a&gt;关于js&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;基于对象&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;script language=&amp;quot;javascript&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Firefox&lt;/code&gt; 和 &lt;code&gt;IE&lt;/code&gt;存在大量兼容性问题,其主要原因是他们对js的支持不同&lt;/li&gt;
&lt;li&gt;ajax技术一定要使用JavaScript&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="面试江湖" scheme="http://www.i7xy.cn/categories/%E9%9D%A2%E8%AF%95%E6%B1%9F%E6%B9%96/"/>
    
    
      <category term="面试" scheme="http://www.i7xy.cn/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="JS" scheme="http://www.i7xy.cn/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>easy-mock笔记</title>
    <link href="http://www.i7xy.cn/2019/01/02/easy-mock%E7%AC%94%E8%AE%B0/"/>
    <id>http://www.i7xy.cn/2019/01/02/easy-mock笔记/</id>
    <published>2019-01-02T06:40:25.000Z</published>
    <updated>2019-02-24T14:01:19.548Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一-POST"><a href="#一-POST" class="headerlink" title="一.POST"></a>一.<code>POST</code></h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// img:返回邮箱+随机图片链接</span></span><br><span class="line"><span class="comment">// body: &#123;"email":"34805850@qq.com"&#125;</span></span><br><span class="line">img: <span class="function"><span class="keyword">function</span>(<span class="params">&#123; _req, Mock &#125;</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> _req.body.email + <span class="string">"_"</span> + Mock.mock(<span class="string">"@image"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="二-GET"><a href="#二-GET" class="headerlink" title="二.GET"></a>二.<code>GET</code></h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取GET中的参数: return _req.query.name</span></span><br><span class="line"><span class="comment">// name获取到arley</span></span><br><span class="line">&#123;</span><br><span class="line">      <span class="string">"method"</span>: <span class="string">"GET"</span>,</span><br><span class="line">      <span class="string">"url"</span>: <span class="string">"/mock/5c16f0c22060e52d3e5638e1/example/query?name=arley"</span>,</span><br><span class="line">      <span class="string">"header"</span>: &#123;</span><br><span class="line">        <span class="string">"host"</span>: </span><br><span class="line">        <span class="string">"x-forwarded-for"</span>: </span><br><span class="line">        <span class="string">"x-forwarded-proto"</span>: </span><br><span class="line">        <span class="string">"connection"</span>: </span><br><span class="line">        <span class="string">"accept"</span>: </span><br><span class="line">        <span class="string">"user-agent"</span>: </span><br><span class="line">        <span class="string">"accept-encoding"</span>:</span><br><span class="line">        <span class="string">"accept-language"</span>:</span><br><span class="line">        <span class="string">"cookie"</span>: </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>实例:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  success: <span class="literal">true</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    <span class="keyword">default</span>: <span class="string">"hah"</span>,</span><br><span class="line">    _req: <span class="function"><span class="keyword">function</span>(<span class="params">&#123;_req&#125;</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> _req</span><br><span class="line">    &#125;,</span><br><span class="line">    name: <span class="function"><span class="keyword">function</span>(<span class="params">&#123;_req&#125;</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> _req.query.name || <span class="keyword">this</span>.default</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>三. 带随机数的常用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"success"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">"data"</span>: &#123;</span><br><span class="line">    <span class="string">"projects|3-10"</span>: [&#123;</span><br><span class="line">      <span class="string">"name"</span>: <span class="string">"演示用"</span>,</span><br><span class="line">      <span class="string">"url"</span>: <span class="string">"@url"</span>,</span><br><span class="line">      <span class="string">"email"</span>: <span class="string">"@email"</span>,</span><br><span class="line">      <span class="string">"address"</span>: <span class="string">"@county(true)"</span>,</span><br><span class="line">      <span class="string">"string|1-10"</span>: <span class="string">"★"</span>, <span class="comment">// 随机个数的1~10个★</span></span><br><span class="line">      <span class="string">"number|1-100"</span>: <span class="number">100</span>, <span class="comment">// 随机1~100的数字  "@integer(1,100)"</span></span><br><span class="line">      <span class="string">"boolean|1-2"</span>: <span class="literal">true</span>, <span class="comment">// 随机true或false</span></span><br><span class="line">      <span class="string">"object|2"</span>: &#123;</span><br><span class="line">        <span class="string">"310000"</span>: <span class="string">"上海市"</span>,</span><br><span class="line">        <span class="string">"320000"</span>: <span class="string">"江苏省"</span>,</span><br><span class="line">        <span class="string">"330000"</span>: <span class="string">"浙江省"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="四-自定义响应"><a href="#四-自定义响应" class="headerlink" title="四.自定义响应"></a>四.自定义响应</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  success: <span class="literal">true</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    name: <span class="string">"hh"</span></span><br><span class="line">  &#125;,</span><br><span class="line"><span class="comment">//   响应头</span></span><br><span class="line">  _res: &#123;</span><br><span class="line">    status: <span class="number">400</span>, <span class="comment">// 状态为400</span></span><br><span class="line">    data: &#123;</span><br><span class="line">      success: <span class="literal">false</span></span><br><span class="line">    &#125;,</span><br><span class="line">    cookies: &#123;</span><br><span class="line">      test: <span class="string">"true"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    headers: &#123;</span><br><span class="line">      Power: <span class="string">"easy-mock"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="我的案例"><a href="#我的案例" class="headerlink" title="我的案例"></a>我的案例</h4><ol><li><p>注册</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"code"</span>: <span class="function"><span class="keyword">function</span>(<span class="params">&#123;</span></span></span><br><span class="line"><span class="function"><span class="params">    _req,</span></span></span><br><span class="line"><span class="function"><span class="params">    Mock</span></span></span><br><span class="line"><span class="function"><span class="params">  &#125;</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (_req.body.email === <span class="string">'34805850@qq.com'</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">20001</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(_req.body.email===<span class="string">''</span> || _req.body.password===<span class="string">''</span> || _req.body.phone===<span class="string">''</span> || _req.body.school===<span class="string">''</span> || _req.body.type===<span class="string">''</span>)&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">20002</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">20000</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"message"</span>: <span class="function"><span class="keyword">function</span>(<span class="params">&#123;</span></span></span><br><span class="line"><span class="function"><span class="params">    _req,</span></span></span><br><span class="line"><span class="function"><span class="params">    Mock</span></span></span><br><span class="line"><span class="function"><span class="params">  &#125;</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.code === <span class="number">20001</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"账号已存在!"</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.code === <span class="number">20002</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"请填写完整信息!"</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"注册成功!"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>登录</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"code"</span>: <span class="function"><span class="keyword">function</span>(<span class="params">&#123;</span></span></span><br><span class="line"><span class="function"><span class="params">    _req,</span></span></span><br><span class="line"><span class="function"><span class="params">    Mock</span></span></span><br><span class="line"><span class="function"><span class="params">  &#125;</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ((_req.body.username === <span class="string">"18287722340"</span> || _req.body.username === <span class="string">"34805850@qq.com"</span>) &amp;&amp; _req.body.password === <span class="string">"123456"</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">20000</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">20001</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"message"</span>: <span class="function"><span class="keyword">function</span>(<span class="params">&#123;</span></span></span><br><span class="line"><span class="function"><span class="params">    _req,</span></span></span><br><span class="line"><span class="function"><span class="params">    Mock</span></span></span><br><span class="line"><span class="function"><span class="params">  &#125;</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.code === <span class="number">20001</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"密码错误!"</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"登录成功!"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"token"</span>: <span class="function"><span class="keyword">function</span>(<span class="params">&#123;</span></span></span><br><span class="line"><span class="function"><span class="params">    _req,</span></span></span><br><span class="line"><span class="function"><span class="params">    Mock</span></span></span><br><span class="line"><span class="function"><span class="params">  &#125;</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.code === <span class="number">20000</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> Mock.mock(<span class="string">"@word(32)"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一-POST&quot;&gt;&lt;a href=&quot;#一-POST&quot; class=&quot;headerlink&quot; title=&quot;一.POST&quot;&gt;&lt;/a&gt;一.&lt;code&gt;POST&lt;/code&gt;&lt;/h4&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// img:返回邮箱+随机图片链接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// body: &amp;#123;&quot;email&quot;:&quot;34805850@qq.com&quot;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;img: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&amp;#123; _req, Mock &amp;#125;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; _req.body.email + &lt;span class=&quot;string&quot;&gt;&quot;_&quot;&lt;/span&gt; + Mock.mock(&lt;span class=&quot;string&quot;&gt;&quot;@image&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="前端构建" scheme="http://www.i7xy.cn/categories/%E5%89%8D%E7%AB%AF%E6%9E%84%E5%BB%BA/"/>
    
    
      <category term="学习笔记" scheme="http://www.i7xy.cn/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="MOCK" scheme="http://www.i7xy.cn/tags/MOCK/"/>
    
  </entry>
  
  <entry>
    <title>考研楼自动抢座 - Java</title>
    <link href="http://www.i7xy.cn/2018/12/23/%E8%80%83%E7%A0%94%E6%A5%BC%E8%87%AA%E5%8A%A8%E6%8A%A2%E5%BA%A7-Java/"/>
    <id>http://www.i7xy.cn/2018/12/23/考研楼自动抢座-Java/</id>
    <published>2018-12-23T13:05:34.000Z</published>
    <updated>2019-01-28T12:17:59.541Z</updated>
    
    <content type="html"><![CDATA[<p>本篇日志为记录<code>第一次用java写HTTP相关的小工具</code>,这学期学完了java课程,由于最近在忙<code>vue</code>的完整项目,所以基本没用java做过啥成品,本着学习的精神和几小时的闲暇时间,成品一个<code>抢座</code>的http请求工具,实现自动抢座.</p><ol><li>由于本校考研楼和其他学校基本一样,都得靠抢,在明天(也就是今天),开放抢座;又有一部分账号是<code>第一批</code>抢到了资格的,所以可以靠这类账号去抓包分析.</li><li>记录第一次<code>java</code>写小工具,我会描述怎么找资源,怎么避免重复造轮,快速实现开发.</li><li><p>至今,有很多的爬虫经验,又本着深入前端开发路线走了很长一段路,所以对抓包分析,浏览器开发工具等一系列的更加熟悉,感受一下自己的技术.</p></li><li><p>记录了<code>跨域</code>和<code>如何用一门语言实现从来没用本语言实现过的功能</code></p></li></ol><a id="more"></a><h4 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h4><ol><li>学校的抢座网站其实还算不错,前端代码放在一个服务器,后端接口放在了另外一个服务器,所以也就有了需要跨域一说(学校没做<code>CORS</code>以及任何跨域处理,导致PC端不能正常访问,学校肯定是故意的,对.)</li></ol><h5 id="对跨越的理解"><a href="#对跨越的理解" class="headerlink" title="对跨越的理解"></a>对跨越的理解</h5><blockquote><p>跨域在我看来主要是指:<code>PC端浏览器</code>对不同源访问的访问拦截…听不懂,没关系,看到<code>PC</code>两字,也就胜利一半了;详细的是这样的:当前端网页发起一个请求后,后端返回请求信息,重点在<code>响应头</code> ~ 当请求的源地址<code>请求头 - orgin</code>,也就是俗称打开当前网站的链接,比如打开<code>A</code>(<a href="http://www.a.com),然后`A`的数据来源是去发送`GET或POST等`HTTP请求到`B`(api.b.com)来获取数据,在后端没设置响应头`(允许某些网址获取数据的Access-Control-Allow-Origin)`,所以PC端浏览器就对这类操作进行了拦截,预请求option被拦截,真实的请求将不在发送" target="_blank" rel="noopener">www.a.com),然后`A`的数据来源是去发送`GET或POST等`HTTP请求到`B`(api.b.com)来获取数据,在后端没设置响应头`(允许某些网址获取数据的Access-Control-Allow-Origin)`,所以PC端浏览器就对这类操作进行了拦截,预请求option被拦截,真实的请求将不在发送</a>.</p></blockquote><p>PHP代码如下,俗称<code>CROS</code>方式<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">header(<span class="string">'Access-Control-Allow-Origin:*'</span>);  <span class="comment">//支持全域名访问，不安全，部署后需要固定限制为客户端网址</span></span><br><span class="line">header(<span class="string">'Access-Control-Allow-Methods:POST,GET,OPTIONS,DELETE'</span>); <span class="comment">//支持的http 动作</span></span><br><span class="line">header(<span class="string">'Access-Control-Allow-Headers:x-requested-with,content-type'</span>);  <span class="comment">//允许请求头携带的名字</span></span><br></pre></td></tr></table></figure></p><p>回到我们的故事上来,由于学校不允许跨域请求,所以<code>得抓手机的包</code>??? 当然<code>fiddler</code>也方便,但没必要,看操作 - <code>设置浏览器允许跨域,不拦截非同源请求</code>,方法很简单,运行浏览器的时候,带上参数<code>--disable-web-security</code>,附上我的系统打开浏览器的方式,这样谷歌就不会拦截跨域请求了.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/google/chrome/google-chrome  --disable-web-security --user-data-dir=/media/arley/Work/chrome</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/12/23/5c1f924e43a26.png" alt="跨域"></p><ol start="2"><li>由于没用java弄过<code>http</code>请求,第一步当然是找怎么写代码喽??? 不,我觉得吧,如果是为了需求去开发一个小工具,没必要原生写法了,咱们又不是<code>新手</code>,第一步当然是<code>github</code>上搜索<code>http</code>,然后语言选择<code>java</code>喽,然后按照star排序,于是乎,找到<code>kevinsawicki/http-request</code> <a href="https://github.com/kevinsawicki/http-request" target="_blank" rel="noopener">go-&gt;github</a> </li></ol><p><img src="https://i.loli.net/2018/12/24/5c20cc2872714.png" alt="request"></p><p>为什么选这个呢?</p><ol><li>搜索需要的关键词,,,, 如果你不知道关键字,建议跳过这一步,<code>you ought to get a K!</code></li><li>选择自己使用的语言 , 比如此案例的<code>java</code></li><li>按照匹配度或者<code>star</code>选一个就ok了</li></ol><p>具体使用方法,像这一种用的人多的框架或者算是库吧,先看github的<code>readme</code>介绍,遇到问题了,不要着急百度,先看<code>issues</code>,能踩的坑,已经被前人填平.比如:</p><p><img src="https://i.loli.net/2018/12/24/5c20ce9eb44c5.png" alt="issues"></p><ol start="3"><li>在编码过程中,发现java对json格式的原生操作好像很弱,于是乎,进行了<code>github</code>的一波操作.<br>找了<code>fastjson</code> By<code>alibaba</code></li></ol><h4 id="编码部分正式开始"><a href="#编码部分正式开始" class="headerlink" title="编码部分正式开始"></a>编码部分正式开始</h4><blockquote><p>由于这个文章并不是用来记录代码,代码也不会外发等原因,得保证明年或者以后学校抢座秩序的运营嘛~ 所以代码只发布部分,并且参数去掉部分.</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> login = <span class="keyword">false</span>;</span><br><span class="line">    String authorizationData;</span><br><span class="line">    String Authorization;</span><br><span class="line">    String baseUrl = <span class="string">"http://www.baidu.com"</span>;</span><br><span class="line">    String token_type;</span><br><span class="line">    String access_token;</span><br><span class="line">    <span class="keyword">boolean</span> staticSeat = <span class="keyword">false</span>;</span><br><span class="line">    String needSeat;</span><br><span class="line">    String name;</span><br><span class="line">    ArrayList P =  <span class="keyword">new</span> ArrayList();</span><br><span class="line">    ArrayList seat =  <span class="keyword">new</span> ArrayList();</span><br><span class="line"></span><br><span class="line">    User(String username,String password,<span class="keyword">boolean</span> staticSeat,String needSeat) &#123;</span><br><span class="line">        <span class="keyword">this</span>.staticSeat = staticSeat;</span><br><span class="line">        <span class="keyword">this</span>.needSeat = needSeat;</span><br><span class="line">        Map&lt;String, String&gt; data = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line">        data.put(<span class="string">"grant_type"</span>, <span class="string">"grant_type"</span>);</span><br><span class="line">        data.put(<span class="string">"username"</span>, username);</span><br><span class="line">        data.put(<span class="string">"password"</span>, password);</span><br><span class="line">        data.put(<span class="string">"client_id"</span>, <span class="string">"srclient_idms_xgc"</span>);</span><br><span class="line">        data.put(<span class="string">"client_secret"</span>, <span class="string">"client_secret"</span>);</span><br><span class="line">        String res = HttpRequest.post(baseUrl + <span class="string">"/token"</span>).form(data).body();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            authorizationData = res;</span><br><span class="line">            name = getSubString(res, <span class="string">"\"true_name\":\""</span>, <span class="string">"\""</span>);</span><br><span class="line">            token_type = getSubString(res, <span class="string">"\"token_type\":\""</span>, <span class="string">"\""</span>);</span><br><span class="line">            access_token = getSubString(res, <span class="string">"\"access_token\":\""</span>, <span class="string">"\""</span>);</span><br><span class="line">            Authorization = token_type + <span class="string">" "</span> + access_token;</span><br><span class="line">            <span class="keyword">if</span> (!name.isEmpty() &amp;&amp; !res.contains(<span class="string">"学号或密码错误"</span>) &amp;&amp; name.length()&lt;<span class="number">20</span> &amp;&amp; name.length()&gt;<span class="number">1</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"登录成功:"</span> + name);</span><br><span class="line">                login = <span class="keyword">true</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                System.out.println(res);</span><br><span class="line">                login = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (NullPointerException e)&#123;</span><br><span class="line">            System.out.println(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">login</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> login;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getOneseat</span><span class="params">(String seat)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!login)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Map&lt;String, String&gt; data = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line">        data.put(<span class="string">"grant_type"</span>, <span class="string">"password"</span>);</span><br><span class="line"></span><br><span class="line">        String response = HttpRequest.post(baseUrl + <span class="string">"/api/order/postorder/"</span>+seat)</span><br><span class="line">                .header(<span class="string">"Authorization"</span>, <span class="keyword">this</span>.Authorization)</span><br><span class="line">                .form(data)</span><br><span class="line">                .body();</span><br><span class="line">        JSONObject jsonObject = JSON.parseObject(response);</span><br><span class="line"></span><br><span class="line">        JSONObject json = JSON.parseObject(jsonObject.getString(<span class="string">"data"</span>));</span><br><span class="line">        String SeatId = json.getString(<span class="string">"SeatId"</span>);</span><br><span class="line">        <span class="keyword">if</span>(!SeatId.isEmpty())&#123;</span><br><span class="line">                System.out.println(<span class="string">"抢到座位:"</span>+SeatId);</span><br><span class="line"><span class="comment">//                System.exit(0); //不退出基本能保证抢到</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>((staticSeat) &amp;&amp; (seat.equals(needSeat)))&#123;</span><br><span class="line">            getzone();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getseats</span><span class="params">(String P)</span></span>&#123;</span><br><span class="line">        String response = HttpRequest.get(baseUrl + <span class="string">"/api/seat/getseat/"</span>+P)</span><br><span class="line">                .header(<span class="string">"Authorization"</span>, <span class="keyword">this</span>.Authorization)</span><br><span class="line">                .body();</span><br><span class="line">        JSONObject jsonObject = JSON.parseObject(response);</span><br><span class="line"><span class="comment">//        System.out.println(response);</span></span><br><span class="line">        <span class="keyword">for</span> (Object obj : jsonObject.getJSONArray(<span class="string">"seat"</span>)) &#123;</span><br><span class="line">            JSONObject item = (JSONObject) obj;</span><br><span class="line">            <span class="keyword">if</span>(item.getString(<span class="string">"Status"</span>)==<span class="string">"false"</span>)&#123;</span><br><span class="line">                String s = item.getString(<span class="string">"Id"</span>);</span><br><span class="line">                seat.add(s);</span><br><span class="line">                System.out.println(<span class="string">"空座位："</span>+s);</span><br><span class="line">                getOneseat(s);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getzone</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!login)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        String response = HttpRequest.get(baseUrl + <span class="string">"/api/seat/getzone/P"</span>)</span><br><span class="line">                .header(<span class="string">"Authorization"</span>, <span class="keyword">this</span>.Authorization)</span><br><span class="line">                .body();</span><br><span class="line">        System.out.println(<span class="string">"#####################"</span>);</span><br><span class="line">        System.out.println(<span class="string">"教室信息："</span>);</span><br><span class="line">        String maxP= <span class="string">""</span> ;</span><br><span class="line">        <span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line">        JSONObject jsonObject = JSON.parseObject(response);</span><br><span class="line">        <span class="keyword">for</span> (Object obj : jsonObject.getJSONArray(<span class="string">"zone"</span>)) &#123;</span><br><span class="line">            JSONObject item = (JSONObject) obj;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(max &lt; Integer.parseInt(item.getString(<span class="string">"count"</span>)))&#123;</span><br><span class="line">                maxP = item.getString(<span class="string">"flag"</span>);</span><br><span class="line">                max = Integer.parseInt(item.getString(<span class="string">"count"</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(item.getString(<span class="string">"name"</span>) + <span class="string">" -- "</span> +item.getString(<span class="string">"count"</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(maxP!=<span class="string">""</span> &amp;&amp; max!=<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"#####################"</span>);</span><br><span class="line">            System.out.println(<span class="string">"最多的教室为："</span> + maxP +<span class="string">",共剩余座位："</span>+max+<span class="string">" - 开抢!"</span>);</span><br><span class="line">            getseats(maxP);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"没座位了!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 取消预约</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">Cancel</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Map&lt;String, String&gt; data = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line">        data.put(<span class="string">"grant_type"</span>, <span class="string">"password"</span>);</span><br><span class="line">        String res = HttpRequest.post(baseUrl + <span class="string">"/api/order/postcancel"</span>)</span><br><span class="line">                .header(<span class="string">"Authorization"</span>, <span class="keyword">this</span>.Authorization)</span><br><span class="line">                .form(data)</span><br><span class="line">                .body();</span><br><span class="line">        System.out.println(res);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 取两个文本之间的文本值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> text</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> left</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> right</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getSubString</span><span class="params">(String text, String left, String right)</span> </span>&#123;</span><br><span class="line">        String result = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">int</span> zLen;</span><br><span class="line">        <span class="keyword">if</span> (left == <span class="keyword">null</span> || left.isEmpty()) &#123;</span><br><span class="line">            zLen = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            zLen = text.indexOf(left);</span><br><span class="line">            <span class="keyword">if</span> (zLen &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">                zLen += left.length();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                zLen = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> yLen = text.indexOf(right, zLen);</span><br><span class="line">        <span class="keyword">if</span> (yLen &lt; <span class="number">0</span> || right == <span class="keyword">null</span> || right.isEmpty()) &#123;</span><br><span class="line">            yLen = text.length();</span><br><span class="line">        &#125;</span><br><span class="line">        result = text.substring(zLen, yLen);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 本来是多线程的,时间不允许...</span></span><br><span class="line"><span class="keyword">import</span> java.util.TimerTask;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">1</span>!=<span class="number">1</span>)&#123;</span><br><span class="line">            STU(<span class="string">"账号"</span>, <span class="string">"密码"</span>, <span class="keyword">true</span>, <span class="string">"Pxxx-0xx"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            STU(<span class="string">"账号"</span>, <span class="string">"密码"</span>, <span class="keyword">false</span>, <span class="string">"Pxxx-0xx"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">STU</span><span class="params">(String username, String password, <span class="keyword">boolean</span> staticSeat, String needSeat)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> java.util.Timer().schedule(<span class="keyword">new</span> TimerTask() &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">boolean</span> tmp = <span class="keyword">false</span>;</span><br><span class="line">                <span class="keyword">do</span> &#123;</span><br><span class="line">                    User user = <span class="keyword">new</span> User(username, password, staticSeat, needSeat);</span><br><span class="line">                    tmp = user.login();</span><br><span class="line">                    <span class="keyword">if</span> (staticSeat) &#123;</span><br><span class="line">                        user.getOneseat(needSeat);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">                        user.getzone();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">while</span> (!tmp);</span><br><span class="line">                System.out.println(<span class="string">"----------"</span>);</span><br><span class="line"><span class="comment">////                this.cancel();</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="number">500</span>,<span class="number">500</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><blockquote><p>好了,这个是战争结束之后回来写的<br>怎么说呢,软件不一定有人好使,还有这个抢座是真的恐怖,估计也就30s都没有,座位就没了吧.30s之中我做了程序是这样的:抢了将近20s,本来感觉没希望了,最后惊喜 -&gt; get A seat ,故事结束???有幸有座位学习???不不不.<br>由于在做分析的时候,用的是同学的账号,然后…很是惭愧,把他座位搞丢了,取消了预约之后,就再没登上过他的号,所以,抢到的这个我的实名座位,只希望能实名转到他的户口下…以弥补我的失身之则… 恩,这个算是记录一次自己的实战,代码也不全发,抢座逻辑也很简单,如下:<br>固定抢座和不固定,固定抢座就登录加一个座位号的包,然后over. 不固定抢座,先获取所有教室座位剩余数量,选择最多的那个教室开始循环,发包获取有空位的座位.<br>感谢java.本篇文章主要做<code>对如何使用自己学习了基础的语言</code>进行一次实战开发,既然大学里面学了<code>基础</code>,我觉得吧,师傅领进门之后的后续学习,找到代码里面的乐趣和经验,只有靠<code>练习和投入</code>,对,就是这样.</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇日志为记录&lt;code&gt;第一次用java写HTTP相关的小工具&lt;/code&gt;,这学期学完了java课程,由于最近在忙&lt;code&gt;vue&lt;/code&gt;的完整项目,所以基本没用java做过啥成品,本着学习的精神和几小时的闲暇时间,成品一个&lt;code&gt;抢座&lt;/code&gt;的http请求工具,实现自动抢座.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;由于本校考研楼和其他学校基本一样,都得靠抢,在明天(也就是今天),开放抢座;又有一部分账号是&lt;code&gt;第一批&lt;/code&gt;抢到了资格的,所以可以靠这类账号去抓包分析.&lt;/li&gt;
&lt;li&gt;记录第一次&lt;code&gt;java&lt;/code&gt;写小工具,我会描述怎么找资源,怎么避免重复造轮,快速实现开发.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;至今,有很多的爬虫经验,又本着深入前端开发路线走了很长一段路,所以对抓包分析,浏览器开发工具等一系列的更加熟悉,感受一下自己的技术.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;记录了&lt;code&gt;跨域&lt;/code&gt;和&lt;code&gt;如何用一门语言实现从来没用本语言实现过的功能&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="其他" scheme="http://www.i7xy.cn/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="面试" scheme="http://www.i7xy.cn/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="学习笔记" scheme="http://www.i7xy.cn/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>VUE实现操作系统进程调度模拟</title>
    <link href="http://www.i7xy.cn/2018/11/01/VUE%E5%AE%9E%E7%8E%B0%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%BF%9B%E7%A8%8B%E8%B0%83%E5%BA%A6%E6%A8%A1%E6%8B%9F/"/>
    <id>http://www.i7xy.cn/2018/11/01/VUE实现操作系统进程调度模拟/</id>
    <published>2018-11-01T12:38:05.000Z</published>
    <updated>2018-11-05T13:42:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>《操作系统》课程综合性实验：用C语言（或其它语言，如Java）编程实现对N个进程采用某种进程调度算法（如动态优先权调度算法、先来先服务算法、短进程优先算法、时间片轮转调度算法）调度执行的模拟。</p><p>本项目由js(es6)实现了<code>先来先服务</code>,<code>抢占式短进程优先</code>以及<code>时间片轮转调度算法</code>,更多的内容等写实验报告之后在更新。先贴代码和学到的一些东西。</p><p>技术栈：JS(ES6),VUE(非模块化实践),Element-ui</p><p>项目在线地址：<a href="https://www.i7xy.cn/code/PCB">https://www.i7xy.cn/code/PCB</a> 线上项目vue和element-ui采用了cdn地址</p><p><img src="https://i.loli.net/2018/11/02/5bdc6628d55da.png" alt="运行"></p><a id="more"></a><p>1.对象拷贝</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// var m_process = process;  // 这是直接复制地址... 必须用拷贝，这样复制的，如果修改m_process，原来的process也会受到影响</span></span><br><span class="line"><span class="keyword">var</span> m_process = <span class="built_in">Object</span>.assign(&#123;&#125;, process);  <span class="comment">// ES6的对象拷贝</span></span><br></pre></td></tr></table></figure><p>2.解构赋值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[m_process.name, m_process.arriveTime, m_process.serviceTime] = processItem; <span class="comment">//解构赋值，等同于下</span></span><br><span class="line"><span class="comment">// m_process.name = processItem[0];</span></span><br><span class="line"><span class="comment">// m_process.arriveTime = Number(processItem[1]);</span></span><br><span class="line"><span class="comment">// m_process.serviceTime = Number(processItem[2]);</span></span><br></pre></td></tr></table></figure><p>3.return返回多个内容，用解构赋值接收。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">getAllProcess()&#123;</span><br><span class="line">  <span class="keyword">return</span> [m_allProcess, allTime];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接收 ↓</span></span><br><span class="line">[<span class="keyword">this</span>.allProcess, <span class="keyword">this</span>.allTime] = <span class="keyword">this</span>.getAllProcess();</span><br></pre></td></tr></table></figure><p>4.<code>\{\{\}\}</code> 换成 <code>v-text</code>，解决了线下和线上样式不匹配的问题。</p><p>5.canvas标签上定义的width和height并不是可视高度和宽度,这个可以通过css设置,标签上设置的为画图时候的参考高度和宽度.</p><p>代码托管于github,欢迎<code>Start</code>.<br>项目在线地址：<a href="https://github.com/arleyGuoLei/pcb" target="_blank" rel="noopener">https://github.com/arleyGuoLei/pcb</a></p><p>5.vue加载渲染完之后,才显示页面</p><p>v-cloak</p><blockquote><p><a href="https://cn.vuejs.org/v2/api/#v-cloak" target="_blank" rel="noopener">https://cn.vuejs.org/v2/api/#v-cloak</a></p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[v-cloak]</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;《操作系统》课程综合性实验：用C语言（或其它语言，如Java）编程实现对N个进程采用某种进程调度算法（如动态优先权调度算法、先来先服务算法、短进程优先算法、时间片轮转调度算法）调度执行的模拟。&lt;/p&gt;
&lt;p&gt;本项目由js(es6)实现了&lt;code&gt;先来先服务&lt;/code&gt;,&lt;code&gt;抢占式短进程优先&lt;/code&gt;以及&lt;code&gt;时间片轮转调度算法&lt;/code&gt;,更多的内容等写实验报告之后在更新。先贴代码和学到的一些东西。&lt;/p&gt;
&lt;p&gt;技术栈：JS(ES6),VUE(非模块化实践),Element-ui&lt;/p&gt;
&lt;p&gt;项目在线地址：&lt;a href=&quot;https://www.i7xy.cn/code/PCB&quot;&gt;https://www.i7xy.cn/code/PCB&lt;/a&gt; 线上项目vue和element-ui采用了cdn地址&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2018/11/02/5bdc6628d55da.png&quot; alt=&quot;运行&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="VUE" scheme="http://www.i7xy.cn/categories/VUE/"/>
    
    
      <category term="ES6" scheme="http://www.i7xy.cn/tags/ES6/"/>
    
      <category term="VUE" scheme="http://www.i7xy.cn/tags/VUE/"/>
    
  </entry>
  
  <entry>
    <title>VUE官方文档笔记</title>
    <link href="http://www.i7xy.cn/2018/10/22/VUE%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%E7%AC%94%E8%AE%B0/"/>
    <id>http://www.i7xy.cn/2018/10/22/VUE官方文档笔记/</id>
    <published>2018-10-22T12:25:59.000Z</published>
    <updated>2018-10-22T12:50:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>看官方文档的时候，留下个脚印…</p><a id="more"></a><p><a href="https://cn.vuejs.org/v2/guide/installation.html" target="_blank" rel="noopener">vue</a></p><p><a href="https://cn.vuejs.org/v2/api/#Vue-use" target="_blank" rel="noopener">vue-api</a></p><p><a href="https://cli.vuejs.org/zh/guide/" target="_blank" rel="noopener">vue-cli</a></p><p><a href="https://vuex.vuejs.org/zh/guide/" target="_blank" rel="noopener">vuex</a></p><p><a href="https://router.vuejs.org/zh/" target="_blank" rel="noopener">vue-router</a></p><ol><li><p>Vue 不支持 IE8 及以下版本</p></li><li></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看官方文档的时候，留下个脚印…&lt;/p&gt;
    
    </summary>
    
      <category term="VUE" scheme="http://www.i7xy.cn/categories/VUE/"/>
    
    
      <category term="学习笔记" scheme="http://www.i7xy.cn/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="VUE" scheme="http://www.i7xy.cn/tags/VUE/"/>
    
  </entry>
  
  <entry>
    <title>webpack - 前端构建模块化</title>
    <link href="http://www.i7xy.cn/2018/10/22/webpack-%E5%89%8D%E7%AB%AF%E6%9E%84%E5%BB%BA%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    <id>http://www.i7xy.cn/2018/10/22/webpack-前端构建模块化/</id>
    <published>2018-10-22T09:35:23.000Z</published>
    <updated>2018-10-22T11:00:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>学习了<code>vue</code>，回来补习<code>webpack</code>的洞了。</p><p>持续更新记录ing.</p><a id="more"></a><p><a href="https://segmentfault.com/a/1190000006178770" target="_blank" rel="noopener">参考学习地址</a></p><p>1、<br>文中<code>node_modules/.bin/webpack app/main.js public/bundle.js</code>运行之后会提示安装<code>webpack-cli</code>，安装之后，还是打包不了。</p><p>替换使用:<code>npx webpack app/main.js --output public/bundle.js</code>打包成功。</p><p>2、教程中的打包需要加上<code>--mode development</code><br><code>node_modules/.bin/webpack --mode development</code></p><p>3、热更新，刷新网页</p><p><code>npm install --save-dev webpack-dev-server</code></p><ul><li><p>在webpack的配置文件里添加 <code>webpack.config.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">devServer: &#123;</span><br><span class="line">  contentBase: <span class="string">"./public"</span>,<span class="comment">//本地服务器所加载的页面所在的目录</span></span><br><span class="line">  historyApiFallback: <span class="literal">true</span>,<span class="comment">//不跳转</span></span><br><span class="line">  inline: <span class="literal">true</span><span class="comment">//实时刷新</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在<code>package.json</code>中的scripts对象中添加如下命令，用以开启本地服务器：</p></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">  "test": "echo \"Error: no test specified\" &amp;&amp; exit 1",</span><br><span class="line">  "start": "webpack",</span><br><span class="line">  "server": "webpack-dev-server --open"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>执行<code>npm run server</code></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习了&lt;code&gt;vue&lt;/code&gt;，回来补习&lt;code&gt;webpack&lt;/code&gt;的洞了。&lt;/p&gt;
&lt;p&gt;持续更新记录ing.&lt;/p&gt;
    
    </summary>
    
      <category term="前端构建" scheme="http://www.i7xy.cn/categories/%E5%89%8D%E7%AB%AF%E6%9E%84%E5%BB%BA/"/>
    
    
      <category term="学习笔记" scheme="http://www.i7xy.cn/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Webpack" scheme="http://www.i7xy.cn/tags/Webpack/"/>
    
      <category term="模块化开发" scheme="http://www.i7xy.cn/tags/%E6%A8%A1%E5%9D%97%E5%8C%96%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>对Js运行机制的理解</title>
    <link href="http://www.i7xy.cn/2018/10/20/%E5%AF%B9Js%E8%BF%90%E8%A1%8C%E6%9C%BA%E5%88%B6%E7%9A%84%E7%90%86%E8%A7%A3/"/>
    <id>http://www.i7xy.cn/2018/10/20/对Js运行机制的理解/</id>
    <published>2018-10-20T11:39:29.000Z</published>
    <updated>2018-10-20T12:57:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>Js是假的多线程，子线程由一个主线程控制，子线程不能操作DOM。基本意味着：<strong>同一个时间只能做一件事</strong></p><blockquote><p>为了提高CPU的利用率，HTML5提出Web Worker标准，允许JavaScript脚本创建多个线程，但是子线程完全受主线程控制，且不得操作DOM。所以这个标准并没有改变JavaScript单线程的本质</p></blockquote><a id="more"></a><p>就喜欢案例…</p><p>1、<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span>);<span class="comment">// 同步任务，直接进入主线程执行，所以先输出1</span></span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; <span class="comment">//setTimeout是异步任务，放进任务队列，等主线程调用</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="number">3</span>);</span><br><span class="line">&#125;,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">2</span>);</span><br></pre></td></tr></table></figure></p><blockquote><p>结果 123</p></blockquote><p>2、<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">"start"</span>);</span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"我是异步，放进任务队列等待主线程空闲后执行"</span>);</span><br><span class="line">&#125;, <span class="number">0</span>);</span><br><span class="line">setTimeout((<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"我被放进了主线程，并且执行了"</span>);</span><br><span class="line">&#125;)(), <span class="number">10000</span>);</span><br><span class="line"><span class="comment">//??? 迷惑 10s，是情况1还是2？ 网上两种解释都有，`"我被放进了主线程，并且执行了"` 通过立即执行函数，我觉得像是情况1</span></span><br><span class="line"><span class="comment">// 1. 运行到setTimeout就把setTimeout的回调函数放入任务队列，10s后如果主线程空闲，即运行</span></span><br><span class="line"><span class="comment">// 2. 运行到setTimeout，先不管，10s之后把回调函数放入任务队列，主线程如果这时候空闲，即运行</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"over"</span>);</span><br></pre></td></tr></table></figure></p><blockquote><p>start<br>我被放进了主线程，并且执行了<br>over<br>我是异步，放进任务队列等待主线程空闲后执行</p></blockquote><p>3、</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">'1'</span>);</span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'5'</span>);</span><br><span class="line">&#125;, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'2'</span>);</span><br><span class="line">  resolve();</span><br><span class="line">&#125;).then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'4'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'3'</span>);</span><br></pre></td></tr></table></figure><blockquote><p>12345</p></blockquote><p>4、<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">"1"</span>);</span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"2"</span>);</span><br><span class="line">&#125;,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)&#123;&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>1 , 主线程忙着跑死循环，不输出2.</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Js是假的多线程，子线程由一个主线程控制，子线程不能操作DOM。基本意味着：&lt;strong&gt;同一个时间只能做一件事&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为了提高CPU的利用率，HTML5提出Web Worker标准，允许JavaScript脚本创建多个线程，但是子线程完全受主线程控制，且不得操作DOM。所以这个标准并没有改变JavaScript单线程的本质&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="其他" scheme="http://www.i7xy.cn/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="JS" scheme="http://www.i7xy.cn/tags/JS/"/>
    
      <category term="学习笔记" scheme="http://www.i7xy.cn/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Math的三个取整方法区别</title>
    <link href="http://www.i7xy.cn/2018/10/20/Math%E7%9A%84%E4%B8%89%E4%B8%AA%E5%8F%96%E6%95%B4%E6%96%B9%E6%B3%95%E5%8C%BA%E5%88%AB/"/>
    <id>http://www.i7xy.cn/2018/10/20/Math的三个取整方法区别/</id>
    <published>2018-10-20T05:25:18.000Z</published>
    <updated>2018-10-20T05:28:55.000Z</updated>
    
    <content type="html"><![CDATA[<p><code>Math.round()</code> ： 四舍五入</p><p><code>Math.ceil()</code> ： ceil为天花板意思，所以为向上取整。</p><blockquote><p>让数尽量变大</p></blockquote><p><code>Math.floor()</code> ： floor为地板意思，所以为向下取整。</p><blockquote><p>让数尽量变小</p></blockquote><a id="more"></a><p>1.Math.round()：根据“round”的字面意思“附近、周围”，可以猜测该函数是求一个附近的整数，看下面几个例子就明白。</p><p>小数点后第一位&lt;5<br>正数：Math.round(11.46)=11<br>负数：Math.round(-11.46)=-11</p><p>小数点后第一位&gt;5<br>正数：Math.round(11.68)=12<br>负数：Math.round(-11.68)=-12</p><p>小数点后第一位=5<br>正数：Math.round(11.5)=12<br>负数：Math.round(-11.5)=-11<br>总结：（小数点后第一位）大于五全部加，等于五正数加，小于五全不加。</p><p>2.Math.ceil()：根据“ceil”的字面意思“天花板”去理解；<br>例如：<br>Math.ceil(11.46)=Math.ceil(11.68)=Math.ceil(11.5)=12<br>Math.ceil(-11.46)=Math.ceil(-11.68)=Math.ceil(-11.5)=-11</p><p>3.Math.floor()：根据“floor”的字面意思“地板”去理解；<br>例如：<br>Math.ceil(11.46)=Math.ceil(11.68)=Math.ceil(11.5)=11<br>Math.ceil(-11.46)=Math.ceil(-11.68)=Math.ceil(-11.5)=-12</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;Math.round()&lt;/code&gt; ： 四舍五入&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Math.ceil()&lt;/code&gt; ： ceil为天花板意思，所以为向上取整。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;让数尽量变大&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;Math.floor()&lt;/code&gt; ： floor为地板意思，所以为向下取整。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;让数尽量变小&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="其他" scheme="http://www.i7xy.cn/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="JS" scheme="http://www.i7xy.cn/tags/JS/"/>
    
      <category term="学习笔记" scheme="http://www.i7xy.cn/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Js回调函数</title>
    <link href="http://www.i7xy.cn/2018/10/20/Js%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/"/>
    <id>http://www.i7xy.cn/2018/10/20/Js回调函数/</id>
    <published>2018-10-20T05:20:20.000Z</published>
    <updated>2018-10-20T06:31:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>主函数的事先干完，回头再调用传进来的那个函数。<br>ES5 到 ES6，深入了解<code>Promise</code></p><a id="more"></a><p>例一： 执行结果 A -&gt; B -&gt; C</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params">callbackFunction</span>) </span>&#123;</span><br><span class="line">  alert(<span class="string">"A"</span>);</span><br><span class="line">  <span class="keyword">var</span> m = <span class="string">"C"</span>;</span><br><span class="line">  <span class="keyword">return</span> callbackFunction(m);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params">m</span>) </span>&#123;</span><br><span class="line">  alert(<span class="string">"B"</span>);</span><br><span class="line">  <span class="keyword">return</span> m;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> result = a(b);</span><br><span class="line">alert(<span class="string">"result = "</span> + result);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行结果 A -&gt; B -&gt; C</span></span><br></pre></td></tr></table></figure><p>例二： 先输出 <code>我是主函数</code>，1s后输出<code>我是回调函数</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义主函数，回调函数作为参数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">A</span>(<span class="params">callback</span>) </span>&#123;</span><br><span class="line">  callback();</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'我是主函数'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义回调函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">B</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  setTimeout(<span class="string">"console.log('我是回调函数')"</span>, <span class="number">1000</span>);<span class="comment">//模仿耗时操作 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">A(B);</span><br></pre></td></tr></table></figure><p>ES6 中用<code>Promise</code>解决回调的痛点，地址：<a href="https://www.i7xy.cn/2018/10/18/ES6%E6%80%BB%E7%BB%93%E5%BD%92%E7%BA%B3/">ES6总结归纳</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;主函数的事先干完，回头再调用传进来的那个函数。&lt;br&gt;ES5 到 ES6，深入了解&lt;code&gt;Promise&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="其他" scheme="http://www.i7xy.cn/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="JS" scheme="http://www.i7xy.cn/tags/JS/"/>
    
      <category term="学习笔记" scheme="http://www.i7xy.cn/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>一些小前端DEMO</title>
    <link href="http://www.i7xy.cn/2018/10/19/%E4%B8%80%E4%BA%9B%E5%B0%8F%E5%89%8D%E7%AB%AFDEMO/"/>
    <id>http://www.i7xy.cn/2018/10/19/一些小前端DEMO/</id>
    <published>2018-10-19T15:15:21.000Z</published>
    <updated>2018-11-01T13:19:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>自己平时学习过程中写的一些demo，整理贴，持续更新ing.</p><a id="more"></a><ol><li>计算器：<a href="https://www.i7xy.cn/code/calc/" target="_blank">https://www.i7xy.cn/code/calc/</a></li></ol><ol start="2"><li>响应式时间轴：<a href="https://www.i7xy.cn/code/timeline/" target="_blank">https://www.i7xy.cn/code/timeline/</a></li></ol><ol start="3"><li>爱心鱼(html-cavas游戏)：<a href="https://www.i7xy.cn/code/fish/" target="_blank">https://www.i7xy.cn/code/fish/</a></li></ol><ol start="4"><li>点名系统(js练习 - JS失效 下载代码到本地看吧…)：<a href="https://www.i7xy.cn/code/getName/" target="_blank">https://www.i7xy.cn/code/getName/</a></li></ol><ol start="5"><li>安卓机器人(CSS绘制)：<a href="https://www.i7xy.cn/code/android/" target="_blank">https://www.i7xy.cn/code/android/</a></li></ol><ol start="6"><li>七巧板(CSS绘制)：<a href="https://www.i7xy.cn/code/SevBoard/" target="_blank">https://www.i7xy.cn/code/SevBoard/</a></li></ol><ol start="7"><li>关于页面：<a href="https://www.i7xy.cn/code/about/" target="_blank">https://www.i7xy.cn/code/about/</a></li></ol><ol start="8"><li>多种方法实现一个页面的左中右布局：<a href="https://www.i7xy.cn/code/school/exp_10_2.html" target="_blank">https://www.i7xy.cn/code/school/exp_10_2.html</a></li></ol><ol start="9"><li><p>普通企业网站首页布局(学校作业)：<a href="https://www.i7xy.cn/code/school/exp_10_1.html" target="_blank">https://www.i7xy.cn/code/school/exp_10_1.html</a></p></li><li><p>手风琴Tab效果：<a href="https://www.i7xy.cn/code/accordionCSS/" target="_blank">https://www.i7xy.cn/code/accordionCSS/</a></p></li></ol><blockquote><p>坑：display属性不能设置transition效果</p></blockquote><ol start="11"><li><p>旋转img：<a href="https://www.i7xy.cn/code/rotateImg/" target="_blank">https://www.i7xy.cn/code/rotateImg/</a></p></li><li><p>VUE实现操作系统进程调度模拟<a href="https://www.i7xy.cn/code/PCB/" target="_blank">https://www.i7xy.cn/code/PCB/</a></p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自己平时学习过程中写的一些demo，整理贴，持续更新ing.&lt;/p&gt;
    
    </summary>
    
      <category term="其他" scheme="http://www.i7xy.cn/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="JS" scheme="http://www.i7xy.cn/tags/JS/"/>
    
      <category term="学习笔记" scheme="http://www.i7xy.cn/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="CSS" scheme="http://www.i7xy.cn/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Js闭包</title>
    <link href="http://www.i7xy.cn/2018/10/18/Js%E9%97%AD%E5%8C%85/"/>
    <id>http://www.i7xy.cn/2018/10/18/Js闭包/</id>
    <published>2018-10-18T13:15:31.000Z</published>
    <updated>2018-10-18T13:54:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>一般情况一个函数（函数作用域）执行完毕，里面声明的变量会全部释放，被垃圾回收器回收。但闭包利用一个技巧，让作用域里面的变量，在函数执行完之后依旧保存没有被垃圾回收处理掉。</p><a id="more"></a><ul><li>例1</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">outer</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">inner</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> inner;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> abc = outer();</span><br><span class="line"><span class="comment">//outer()只要执行过，就有了引用函数内部变量的可能，然后就会被保存在内存中；</span></span><br><span class="line"><span class="comment">//outer()如果没有执行过，由于作用域的关系，看不到内部作用域，更不会被保存在内存中了；</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(abc());<span class="comment">//1</span></span><br><span class="line"><span class="built_in">console</span>.log(abc());<span class="comment">//2</span></span><br><span class="line"><span class="comment">//因为a已经在内存中了，所以再次执行abc()的时候，是在第一次的基础上累加的</span></span><br><span class="line"></span><br><span class="line">abc = <span class="literal">null</span>;</span><br><span class="line"><span class="comment">//由于闭包占用内存空间，所以要谨慎使用闭包。尽量在使用完闭包后，及时解除引用，释放内存；</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 直接返回函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">outer2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> t = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(t++);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = outer2();</span><br><span class="line">a();<span class="comment">//1</span></span><br><span class="line">a();<span class="comment">//2</span></span><br><span class="line">a();<span class="comment">//3</span></span><br><span class="line">a = <span class="literal">null</span>;</span><br></pre></td></tr></table></figure><ul><li>例2</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">tmp</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        alert((tmp++));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> bar = foo(<span class="number">1</span>); <span class="comment">// bar 现在是一个闭包</span></span><br><span class="line">bar();<span class="comment">//1</span></span><br><span class="line">bar();<span class="comment">//2</span></span><br><span class="line">bar();<span class="comment">//3</span></span><br><span class="line">bar();<span class="comment">//4</span></span><br></pre></td></tr></table></figure><ul><li>例3</li></ul><blockquote><p>闭包混入立即执行函数</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> btnList = <span class="built_in">document</span>.getElementsByClassName(<span class="string">"btn"</span>),</span><br><span class="line">  len = btnList.length;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">  (<span class="function"><span class="keyword">function</span> (<span class="params">j</span>) </span>&#123;</span><br><span class="line">    btnList[j].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"第"</span> + j + <span class="string">"个按钮被点击到了"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)(i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这又哪里产生了闭包了。别急，我们一个个分析。for循环每一次都执行一个 IIEF （自执行函数），每一次变量 i 被当做参数传到IIEF中去 ， 那么这个自执行函数中创建了一个变量，参数 j 然后元素节点 btnList 绑定一个onclick事件，执行函数里面需要用到这个参数 j ，但是你又没点 ， 那么这个遍历 j 就没有被清理 ， 就一直在参数里面被保存着 ， 每一个IIEF都做一样的事情 ， 所以这个时候就产生了闭包 ， 变量 j 并没有被回收，依然在等待你使用。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一般情况一个函数（函数作用域）执行完毕，里面声明的变量会全部释放，被垃圾回收器回收。但闭包利用一个技巧，让作用域里面的变量，在函数执行完之后依旧保存没有被垃圾回收处理掉。&lt;/p&gt;
    
    </summary>
    
      <category term="其他" scheme="http://www.i7xy.cn/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="JS" scheme="http://www.i7xy.cn/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>Js面试题整理</title>
    <link href="http://www.i7xy.cn/2018/10/18/Js%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E7%90%86/"/>
    <id>http://www.i7xy.cn/2018/10/18/Js面试题整理/</id>
    <published>2018-10-18T12:40:43.000Z</published>
    <updated>2018-10-20T12:59:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>持续更新ing…</p><a id="more"></a><h4 id="立即执行函数-IIFE"><a href="#立即执行函数-IIFE" class="headerlink" title="立即执行函数(IIFE)"></a>立即执行函数(IIFE)</h4><blockquote><p>立即执行函数是指声明完之后便直接执行的函数，这类函数通常是一次性使用的，因此没必要给这类函数命名，直接让它执行就好了；</p></blockquote><p>主要目的是做的一些封装，防止变量全局污染，以及保证内部变量的安全；</p><p>javascript中没用私有作用域的概念，如果在多人开发的项目上，你在全局或局部作用域中声明了一些变量，可能会被其他人不小心用同名的变量给覆盖掉，根据javascript函数作用域链的特性，可以使用IIFE可以模仿一个私有作用域，用匿名函数作为一个“容器”，“容器”内部可以访问外部的变量，而外部环境不能访问“容器”内部的变量，所以( function(){…} )()内部定义的变量不会和外部的变量发生冲突，俗称“匿名包裹器”或“命名空间”。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> liList = ul.getElementsByTagName(<span class="string">'li'</span>)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="number">6</span>; i++)&#123;</span><br><span class="line">  liList[i].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(i) <span class="comment">// 为什么 alert 出来的总是 6，而不是 0、1、2、3、4、5</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为什么 alert 的总是 6 呢，因为 i 是贯穿整个作用域的，而不是给每个 li 分配了一个 i，如下：</p><p><img src="https://i.loli.net/2018/10/18/5bc8867027446.png" alt=""></p><p>那么怎么解决这个问题呢？用立即执行函数给每个 li 创造一个独立作用域即可（当然还有其他办法）：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> liList = ul.getElementsByTagName(<span class="string">'li'</span>)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="number">6</span>; i++)&#123;</span><br><span class="line">   (<span class="function"><span class="keyword">function</span>(<span class="params">ii</span>)</span>&#123;</span><br><span class="line">    liList[ii].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      alert(ii) <span class="comment">// 0、1、2、3、4、5</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)(i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在立即执行函数执行的时候，i 的值被赋值给 ii，此后 ii 的值一直不变。</p><p>i 的值从 0 变化到 5，对应 6 个立即执行函数，这 6 个立即执行函数里面的 ii 「分别」是 0、1、2、3、4、5。</p><h4 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h4><p>将代码修改功能为一秒后输出1~5(在for循环之内完成)<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line">  setTimeout( <span class="function"><span class="keyword">function</span> <span class="title">timer</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(i);</span><br><span class="line">  &#125;, <span class="number">1000</span> );</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li>方法① 闭包</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">  (<span class="function"><span class="keyword">function</span> (<span class="params">ii</span>) </span>&#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span> <span class="title">timer</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(ii);</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">  &#125;)(i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>方法② let</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">  setTimeout(<span class="function"><span class="keyword">function</span> <span class="title">timer</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">  &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二题</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//面试经典问题:</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">onMyLoad</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="undefined">            /*</span></span><br><span class="line"><span class="undefined">            抛出问题:</span></span><br><span class="line"><span class="undefined">                此题的目的是想每次点击对应目标时弹出对应的数字下标 0~4,但实际是无论点击哪个目标都会弹出数字5</span></span><br><span class="line"><span class="undefined">            问题所在:</span></span><br><span class="line"><span class="javascript">                arr 中的每一项的 onclick 均为一个函数实例(<span class="built_in">Function</span> 对象),这个函数实例也产生了一个闭包域,</span></span><br><span class="line"><span class="javascript">                这个闭包域引用了外部闭包域的变量,其 <span class="function"><span class="keyword">function</span> <span class="title">scope</span> 的 <span class="title">closure</span> 对象有个名为 <span class="title">i</span> 的引用,</span></span></span><br><span class="line"><span class="undefined">                外部闭包域的私有变量内容发生变化,内部闭包域得到的值自然会发生改变</span></span><br><span class="line"><span class="undefined">            */</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> arr = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"p"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length;i++)&#123;</span></span><br><span class="line"><span class="javascript">                arr[i].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="undefined">                    alert(i);</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onload</span>=<span class="string">"onMyLoad()"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>产品一<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>产品二<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>产品三<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>产品四<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>产品五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>用多种方法解决</p><p>方法一</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">解决思路:</span></span><br><span class="line"><span class="comment">    增加若干个对应的闭包域空间(这里采用的是匿名函数),专门用来存储原先需要引用的内容(下标),不过只限于基本类型(基本类型值传递,对象类型引用传递)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//声明一个匿名函数,若传进来的是基本类型则为值传递,故不会对实参产生影响,</span></span><br><span class="line">    <span class="comment">//该函数对象有一个本地私有变量arg(形参) ,该函数的 function scope 的 closure 对象属性有两个引用,一个是 arr,一个是 i</span></span><br><span class="line">    <span class="comment">//尽管引用 i 的值随外部改变 ,但本地私有变量(形参) arg 不会受影响,其值在一开始被调用的时候就决定了.</span></span><br><span class="line">    (<span class="function"><span class="keyword">function</span> (<span class="params">arg</span>) </span>&#123;</span><br><span class="line">        arr[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  <span class="comment">//onclick函数实例的 function scope 的 closure 对象属性有一个引用 arg,</span></span><br><span class="line">            alert(arg);                 <span class="comment">//只要 外部空间的 arg 不变,这里的引用值当然不会改变</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)(i);                              <span class="comment">//立刻执行该匿名函数,传递下标 i(实参)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法二</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">解决思路:</span></span><br><span class="line"><span class="comment">    将下标作为对象属性(name:"i",value:i的值)添加到每个数组项(p对象)中</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line">    <span class="comment">//为当前数组项即当前 p 对象添加一个名为 i 的属性,值为循环体的 i 变量的值,</span></span><br><span class="line">    <span class="comment">//此时当前 p 对象的 i 属性并不是对循环体的 i 变量的引用,而是一个独立p 对象的属性,属性值在声明的时候就确定了</span></span><br><span class="line">    <span class="comment">//(基本类型的值都是存在栈中的,当有一个基本类型变量声明其等于另一个基本变量时,此时并不是两个基本类型变量都指向一个值,而是各自有各自的值,但值是相等的)</span></span><br><span class="line">    arr[i].i = i;</span><br><span class="line">    arr[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        alert(<span class="keyword">this</span>.i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法三</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">解决思路:</span></span><br><span class="line"><span class="comment">    与解决办法一有点相似但却有点不太相似.</span></span><br><span class="line"><span class="comment">    相似点:同样是增加若干个对应的闭包域空间用来存储下标</span></span><br><span class="line"><span class="comment">    不同点:解决办法一是在新增的匿名闭包空间内完成事件的绑定,而此例是将事件绑定在新增的匿名函数返回的函数上</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    此时绑定的函数中的 function scope 中的 closure 对象的 引用 arg 是指向将其返回的匿名函数的私有变量 arg</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i&lt;arr.length;i++)&#123;</span><br><span class="line">    arr[i].onclick = (<span class="function"><span class="keyword">function</span>(<span class="params">arg</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            alert(arg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法四</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">解决思路与解决办法一相同</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i&lt;arr.length;i++)&#123;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">       <span class="keyword">var</span> temp = i;</span><br><span class="line">        arr[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            alert(temp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法五</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">解决思路与解决办法三及四相同</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line">    arr[i].onclick = (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> temp = i;</span><br><span class="line">        <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            alert(temp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法六</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;<span class="comment">//使用严格模式,否则报错 SyntaxError: Block-scoped declarations (let, const, function, class) not yet supported outside strict mode</span></span><br><span class="line"><span class="keyword">var</span> arr = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"p"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line">    <span class="keyword">let</span> j = i;<span class="comment">//创建一个块级变量</span></span><br><span class="line">    arr[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        alert(j);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本题自己做计算器的时候测试了一部分方法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方法一</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; numDom.length; i++) &#123;</span><br><span class="line">  (<span class="function"><span class="keyword">function</span>(<span class="params">val</span>)</span>&#123;</span><br><span class="line">    numDom[val].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">var</span> num = numDom[val].getAttribute(<span class="string">"data-num"</span>);</span><br><span class="line">      result.value = num;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)(i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法二</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; numDom.length; i++) &#123;</span><br><span class="line">  numDom[i].i = i;</span><br><span class="line">  numDom[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> num = numDom[<span class="keyword">this</span>.i].getAttribute(<span class="string">"data-num"</span>);</span><br><span class="line">    result.value = num;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法三</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; numDom.length; i++) &#123;</span><br><span class="line">    numDom[i].i = i;</span><br><span class="line">    numDom[i].onclick = (<span class="function"><span class="keyword">function</span> (<span class="params">arg</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> num = numDom[arg].getAttribute(<span class="string">"data-num"</span>);</span><br><span class="line">        result.value = num;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)(i);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法四</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; numDom.length; i++) &#123;</span><br><span class="line">  (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> temp = i;</span><br><span class="line">    numDom[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> num = numDom[temp].getAttribute(<span class="string">"data-num"</span>);</span><br><span class="line">      result.value = num;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法五</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; numDom.length; i++) &#123;</span><br><span class="line">  numDom[i].i = i;</span><br><span class="line">  numDom[i].onclick = (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> temp = i;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> num = numDom[temp].getAttribute(<span class="string">"data-num"</span>);</span><br><span class="line">      result.value = num;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="立即执行函数-和-闭包-顺序深入的一道题"><a href="#立即执行函数-和-闭包-顺序深入的一道题" class="headerlink" title="立即执行函数 和 闭包 顺序深入的一道题"></a>立即执行函数 和 闭包 顺序深入的一道题</h5><p>1、<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>没任何坑，输出 0~4</p></blockquote><p>2、<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">  setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">  &#125;, <span class="number">1000</span> * i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>开始输出一个 5，然后每隔一秒再输出一个 5，一共 5 个 5</p></blockquote><p>3、改为闭包+立即执行函数<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">  (<span class="function"><span class="keyword">function</span>(<span class="params">i</span>) </span>&#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(i);</span><br><span class="line">    &#125;, i * <span class="number">1000</span>);</span><br><span class="line">  &#125;)(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>输出0~4</p></blockquote><p>4、删掉立即执行函数的i，不接收传值<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">  (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(i);</span><br><span class="line">    &#125;, i * <span class="number">1000</span>);</span><br><span class="line">  &#125;)(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>开始输出一个 5，然后每隔一秒再输出一个 5，一共 5 个 5</p></blockquote><p>5、立即执行函数<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">  setTimeout(</span><br><span class="line">      (<span class="function"><span class="keyword">function</span>(<span class="params">i</span>) </span>&#123;<span class="built_in">console</span>.log(i);&#125;)(i)</span><br><span class="line">    , i * <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>直接立马输出0~4 setTimeout的第一个参数应该是一个函数（所以这个等同于：setTimeout(undefined, …);）</p></blockquote><p>6、JavaScript 的运行机制相关<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="number">1</span>)</span><br><span class="line">&#125;, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> <span class="title">executor</span>(<span class="params">resolve</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line">  <span class="keyword">for</span>( <span class="keyword">var</span> i=<span class="number">0</span> ; i&lt;<span class="number">10000</span> ; i++ ) &#123;</span><br><span class="line">    i == <span class="number">9999</span> &amp;&amp; resolve();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="number">3</span>);</span><br><span class="line">&#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="number">4</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">5</span>);</span><br></pre></td></tr></table></figure></p><blockquote><p>2 3 5 4 1</p></blockquote><h4 id="回调函数"><a href="#回调函数" class="headerlink" title="回调函数"></a>回调函数</h4><p>题目：红灯三秒亮一次，绿灯两秒亮一次，黄灯一秒亮一次；如何让三个灯不断交替重复亮灯？三个亮灯函数已经存在：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">red</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'red    - '</span>, <span class="keyword">new</span> <span class="built_in">Date</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">green</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'green  - '</span>, <span class="keyword">new</span> <span class="built_in">Date</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">yellow</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'yellow - '</span>, <span class="keyword">new</span> <span class="built_in">Date</span>());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1、es5 回调函数实现</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showRed</span>(<span class="params">callback</span>)</span>&#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    red();</span><br><span class="line">    callback(showYellow);</span><br><span class="line">    &#125;, <span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showGreen</span>(<span class="params">callback</span>)</span>&#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    green();</span><br><span class="line">    callback(showRed);</span><br><span class="line">    &#125;, <span class="number">2000</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showYellow</span>(<span class="params">callback</span>)</span>&#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    callback(showGreen);</span><br><span class="line">    yellow();</span><br><span class="line">    &#125;, <span class="number">1000</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">showRed(showGreen);</span><br></pre></td></tr></table></figure><blockquote><p>避免博客重复，ES6 Promise 回调至 <a href="https://www.i7xy.cn/2018/10/18/ES6%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E7%90%86/">ES6面试题整理</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;持续更新ing…&lt;/p&gt;
    
    </summary>
    
      <category term="面试集锦" scheme="http://www.i7xy.cn/categories/%E9%9D%A2%E8%AF%95%E9%9B%86%E9%94%A6/"/>
    
    
      <category term="面试" scheme="http://www.i7xy.cn/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="JS" scheme="http://www.i7xy.cn/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>Js立即执行函数(转)</title>
    <link href="http://www.i7xy.cn/2018/10/18/Js%E7%AB%8B%E5%8D%B3%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0/"/>
    <id>http://www.i7xy.cn/2018/10/18/Js立即执行函数/</id>
    <published>2018-10-18T12:26:44.000Z</published>
    <updated>2018-10-18T13:05:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>这是 JS 中的一个常见概念，面试时经常会被问到，请「用自己的语言」简述</p><ul><li>立即执行函数是什么</li><li>立即执行函数有什么用途</li></ul><a id="more"></a><h4 id="立即执行函数是什么"><a href="#立即执行函数是什么" class="headerlink" title="立即执行函数是什么"></a>立即执行函数是什么</h4><p>立即执行函数就是</p><ul><li>声明一个匿名函数</li><li>马上调用这个匿名函数</li></ul><p><img src="https://i.loli.net/2018/10/18/5bc882fa03875.png" alt="336056-20161011221635859-1560145581"></p><p>上面是一个典型的立即执行函数。</p><p>首先声明一个匿名函数 <code>function(){alert(&#39;我是匿名函数&#39;)}</code>。<br>然后在匿名函数后面接一对括号 ()，调用这个匿名函数。</p><p><strong>那么为什么还要用另一对括号把匿名函数包起来呢？</strong><br>其实是为了兼容 JS 的语法。</p><p>如果我们不加另一对括号，直接写成</p><p>function(){alert(‘我是匿名函数’)}()<br>浏览器会报语法错误。想要通过浏览器的语法检查，必须加点小东西，比如下面几种</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">( <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert(<span class="string">'我是匿名函数'</span>)&#125;() ) <span class="comment">// 用括号把整个表达式包起来</span></span><br><span class="line">( <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123; alert(<span class="string">'我是匿名函数'</span>)&#125; )() <span class="comment">//</span></span><br><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert(<span class="string">'我是匿名函数'</span>)&#125;() <span class="comment">// 求反，我们不在意值是多少，只想通过语法检查。</span></span><br><span class="line">+<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert(<span class="string">'我是匿名函数'</span>)&#125;()</span><br><span class="line">-<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert(<span class="string">'我是匿名函数'</span>)&#125;()</span><br><span class="line">~<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert(<span class="string">'我是匿名函数'</span>)&#125;()</span><br><span class="line"><span class="keyword">void</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert(<span class="string">'我是匿名函数'</span>)&#125;()</span><br><span class="line"><span class="keyword">new</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert(<span class="string">'我是匿名函数'</span>)&#125;()</span><br></pre></td></tr></table></figure><h4 id="立即执行函数有什么用？"><a href="#立即执行函数有什么用？" class="headerlink" title="立即执行函数有什么用？"></a>立即执行函数有什么用？</h4><p>只有一个作用：创建一个独立的作用域。<br>这个作用域里面的变量，外面访问不到（即避免「变量污染」）。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是 JS 中的一个常见概念，面试时经常会被问到，请「用自己的语言」简述&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;立即执行函数是什么&lt;/li&gt;
&lt;li&gt;立即执行函数有什么用途&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="其他" scheme="http://www.i7xy.cn/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="JS" scheme="http://www.i7xy.cn/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>ES6面试题整理</title>
    <link href="http://www.i7xy.cn/2018/10/18/ES6%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E7%90%86/"/>
    <id>http://www.i7xy.cn/2018/10/18/ES6面试题整理/</id>
    <published>2018-10-18T10:38:20.000Z</published>
    <updated>2018-10-21T11:13:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>这年头，到处都是ES6…<br>持续更新ing…</p><a id="more"></a><h4 id="let和const"><a href="#let和const" class="headerlink" title="let和const"></a>let和const</h4><p> <code>let</code>是更完美的var，不是全局变量，具有块级函数作用域,<code>大多数情况</code>不会发生变量提升。const定义常量值，不能够重新赋值，如果值是一个对象，可以改变对象里边的属性值。</p><p>1、let声明的变量具有块级作用域<br>2、let声明的变量不能通过window.变量名进行访问<br>3、形如for(let x..)的循环是每次迭代都为x创建新的绑定</p><p>下面是var带来的不合理场景</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">  arr[i] = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">arr[<span class="number">5</span>]() <span class="comment">//10</span></span><br></pre></td></tr></table></figure><p>在上述代码中，变量i是var声明的，在全局范围类都有效，所以用来计数的循环变量泄露为全局变量。所以每一次循环，新的i值都会覆盖旧值，导致最后输出都是10。</p><p>而如果对循环使用let语句的情况，那么每次迭代都是为x创建新的绑定代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">  arr[i] = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">arr[<span class="number">5</span>]() <span class="comment">//5,a[5]输出f()&#123;console.log(i);&#125;,后面加个括号代表执行f()</span></span><br></pre></td></tr></table></figure><p>【拓展】<br>当然，除了这种方式让数组找中的各个元素分别是不同的函数，我们还可以采用ES5中的闭包和立即函数两种方法。</p><p>1、采用闭包<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showNum</span>(<span class="params">i</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> a = []</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">  a[i] = showNum(i)(); <span class="comment">//循环输出1,2,3,4</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//a的每一个成员都是undefined</span></span><br></pre></td></tr></table></figure></p><p>2、采用立即执行函数<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = []</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">  a[i] = (<span class="function"><span class="keyword">function</span> (<span class="params">i</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(i)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)(i)</span><br><span class="line">&#125;</span><br><span class="line">a[<span class="number">2</span>](); <span class="comment">//2</span></span><br></pre></td></tr></table></figure></p><p>【面试】<br>把以下代码使用两种方法，依次输出0-9</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> funcs = []</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">  funcs.push(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line">funcs.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">func</span>) </span>&#123;</span><br><span class="line">  func(); <span class="comment">//输出十个10</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>方法一：使用立即执行函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> funcs = []</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line">  funcs.push(</span><br><span class="line">    (</span><br><span class="line">      <span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;<span class="built_in">console</span>.log(value)&#125;&#125;(i)</span><br><span class="line">    )</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">funcs.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">func</span>) </span>&#123;</span><br><span class="line">  func(); <span class="comment">//依次输出0-9</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>看方法一的时候，会有和我一样心情的人么 ↓？得，我去补习<code>js闭包和立即执行函数的知识...</code>了<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">val</span>)</span>&#123;<span class="built_in">console</span>.log(val);&#125;)(<span class="string">"这样输出很牛b？"</span>);</span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">val</span>) </span>&#123; <span class="built_in">console</span>.log(val); &#125; &#125;)()(<span class="string">"那我可就更牛b了"</span>);</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">val</span>) </span>&#123; <span class="built_in">console</span>.log(val); &#125; &#125;)()(<span class="string">"你怎么不牛b死呢"</span>)&#125;)();</span><br><span class="line">( <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="keyword">return</span> (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">console</span>.log(<span class="string">"哈哈，我笑笑不说话"</span>);&#125;)() &#125; ) ();</span><br></pre></td></tr></table></figure></p><p>方法二：使用闭包</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params">i</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> funcs = []</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">  funcs.push(show(i))</span><br><span class="line">&#125;</span><br><span class="line">funcs.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">func</span>) </span>&#123;</span><br><span class="line">  func(); <span class="comment">//0 1 2 3 4 5 6 7 8 9</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>方法三：使用let</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> funcs = []</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">  funcs.push(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line">funcs.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">func</span>) </span>&#123;</span><br><span class="line">  func(); <span class="comment">//依次输出0-9</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>知识回顾(forEach)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//forEach 回顾</span></span><br><span class="line"><span class="keyword">var</span> numbers = [<span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>];</span><br><span class="line">numbers.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item,index</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"num["</span> + index + <span class="string">"] = "</span>+item);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// num[0] = 4</span></span><br><span class="line"><span class="comment">// num[1] = 9</span></span><br><span class="line"><span class="comment">// num[2] = 16</span></span><br><span class="line"><span class="comment">// num[3] = 25</span></span><br></pre></td></tr></table></figure><h4 id="Promise"><a href="#Promise" class="headerlink" title="Promise"></a>Promise</h4><p>一、题目：红灯三秒亮一次，绿灯两秒亮一次，黄灯一秒亮一次；如何让三个灯不断交替重复亮灯？三个亮灯函数已经存在：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">red</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'red    - '</span>, <span class="keyword">new</span> <span class="built_in">Date</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">green</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'green  - '</span>, <span class="keyword">new</span> <span class="built_in">Date</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">yellow</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'yellow - '</span>, <span class="keyword">new</span> <span class="built_in">Date</span>());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>答案：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//亮灯函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tip</span>(<span class="params">fn, timer</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve</span>) </span>&#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      fn();</span><br><span class="line">      resolve();</span><br><span class="line">    &#125;, timer);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve</span>) </span>&#123;</span><br><span class="line">  resolve();</span><br><span class="line">&#125;);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">loop</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  promise.then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> tip(red, <span class="number">3000</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">    .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> tip(green, <span class="number">2000</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> tip(yellow, <span class="number">1000</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    .then(</span><br><span class="line">      <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        loop();</span><br><span class="line">      &#125;</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">loop();</span><br></pre></td></tr></table></figure><p>二、以下代码依次输出的内容是？</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="number">1</span>)</span><br><span class="line">&#125;, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> <span class="title">executor</span>(<span class="params">resolve</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">    i == <span class="number">9999</span> &amp;&amp; resolve();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="number">3</span>);</span><br><span class="line">&#125;).then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="number">4</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">5</span>);</span><br></pre></td></tr></table></figure><blockquote><p>23541</p></blockquote><p>首先先碰到一个 setTimeout，于是会先设置一个定时，在定时结束后将传递这个函数放到任务队列里面，因此开始肯定不会输出 1 。 </p><p>然后是一个 Promise，里面的函数是直接执行的，因此应该直接输出 2 3 。 </p><p>然后，Promise 的 then 应当会放到当前 tick 的最后，但是还是在当前 tick 中。 </p><p>因此，应当先输出 5，然后再输出 4 ， 最后在到下一个 tick，就是 1 。</p><p>三、jQuery的ajax返回的是promise对象吗？</p><blockquote><p>jquery的ajax返回的是deferred对象，通过promise的resolve()方法将其转换为promise对象。<br>var jsPromise = Promise.resolve($.ajax(‘/whatever.json’));</p></blockquote><p>四、promise只有2个状态，成功和失败，怎么让一个函数无论成功还是失败都能被调用？</p><blockquote><p>使用promise.all()</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Promise.all方法用于将多个Promise实例，包装成一个新的Promise实例。</span><br><span class="line"></span><br><span class="line">Promise.all方法接受一个数组作为参数，数组里的元素都是Promise对象的实例，如果不是，就会先调用下面讲到的Promise.resolve方法，将参数转为Promise实例，再进一步处理。（Promise.all方法的参数可以不是数组，但必须具有Iterator接口，且返回的每个成员都是Promise实例。）</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">var p =Promise.all([p1,p2,p3]);</span><br><span class="line">p的状态由p1、p2、p3决定，分为两种情况。</span><br><span class="line">当该数组里的所有Promise实例都进入Fulfilled状态：Promise.all**返回的实例才会变成Fulfilled状态。并将Promise实例数组的所有返回值组成一个数组，传递给Promise.all返回实例的回调函数**。</span><br><span class="line"></span><br><span class="line">当该数组里的某个Promise实例都进入Rejected状态：Promise.all返回的实例会立即变成Rejected状态。并将第一个rejected的实例返回值传递给Promise.all返回实例的回调函数。</span><br></pre></td></tr></table></figure><p>五、分析下列程序代码，得出运行结果，解释其原因</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="number">1</span>)</span><br><span class="line">  resolve()</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="number">2</span>)</span><br><span class="line">&#125;)</span><br><span class="line">promise.then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="number">3</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">4</span>)</span><br></pre></td></tr></table></figure><blockquote><p>1243</p></blockquote><p>原因：Promise 构造函数是同步执行的，promise.then 中的函数是异步执行的。</p><p>六、写运行结果</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise1 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    resolve(<span class="string">'success'</span>)</span><br><span class="line">  &#125;, <span class="number">1000</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">const</span> promise2 = promise1.then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'error!!!'</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'promise1'</span>, promise1)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'promise2'</span>, promise2)</span><br><span class="line"></span><br><span class="line">setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'promise1'</span>, promise1)</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'promise2'</span>, promise2)</span><br><span class="line">&#125;, <span class="number">2000</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/10/21/5bcc2e64b93b4.png" alt="结果"></p><p>七、分析下列程序代码，得出运行结果，解释其原因</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  resolve(<span class="string">'success1'</span>)</span><br><span class="line">  reject(<span class="string">'error'</span>)</span><br><span class="line">  resolve(<span class="string">'success2'</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">promise</span><br><span class="line">  .then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'then: '</span>, res)</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'catch: '</span>, err)</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><blockquote><p>then success1</p></blockquote><p>原因：<br>构造函数中的 resolve 或 reject 只有第一次执行有效，多次调用没有任何作用，promise 状态一旦改变则不能再变。</p><p>八、分析下列程序代码，得出运行结果，解释其原因</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Promise</span>.resolve(<span class="number">1</span>)</span><br><span class="line">  .then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(res)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">3</span></span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(res)</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><blockquote><p>1 2</p></blockquote><p>原因：promise 可以链式调用。提起链式调用我们通常会想到通过 return this 实现，不过 Promise 并不是这样实现的。promise 每次调用 .then 或者 .catch 都会返回一个新的 promise，从而实现了链式调用。</p><p>九、分析下列程序代码，得出运行结果，解释其原因</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'once'</span>)</span><br><span class="line">    resolve(<span class="string">'success'</span>)</span><br><span class="line">  &#125;, <span class="number">1000</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> start = <span class="built_in">Date</span>.now()</span><br><span class="line">promise.then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(res, <span class="built_in">Date</span>.now() - start)</span><br><span class="line">&#125;)</span><br><span class="line">promise.then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(res, <span class="built_in">Date</span>.now() - start)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>once<br>success 1001<br>success 1001</p></blockquote><p>原因：promise 的 .then 或者 .catch 可以被调用多次，但这里 Promise 构造函数只执行一次。或者说 promise 内部状态一经改变，并且有了一个值，那么后续每次调用 .then 或者 .catch 都会直接拿到该值。</p><p>十、分析下列程序代码，得出运行结果，解释其原因</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Promise</span>.resolve()</span><br><span class="line">  .then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'error!!!'</span>) <span class="comment">//运行.then</span></span><br><span class="line">    <span class="comment">//throw Error('error!!!')  //运行.catch 必须throw</span></span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'then: '</span>, res)</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'catch: '</span>, err)</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><blockquote><p>then:  Error: error!!!<br>  at Promise.resolve.then</p></blockquote><p>原因.then 或者 .catch 中 return 一个 error 对象并不会抛出错误，所以不会被后续的 .catch 捕获，需要改成其中一种：<br>return Promise.reject(new Error(‘error!!!’))<br>throw new Error(‘error!!!’)</p><p>因为返回任意一个非 promise 的值都会被包裹成 promise 对象，即 return new Error(‘error!!!’) 等价于 return Promise.resolve(new Error(‘error!!!’))。</p><p>十一、分析下列程序代码，得出运行结果，解释其原因</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise = <span class="built_in">Promise</span>.resolve()</span><br><span class="line">  .then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> promise</span><br><span class="line">  &#125;)</span><br><span class="line">promise.catch(<span class="built_in">console</span>.error)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">运行结果</span><br><span class="line">TypeError: Chaining cycle detected for promise #&lt;Promise&gt;</span><br><span class="line">    at &lt;anonymous&gt;</span><br><span class="line">    at process._tickCallback (internal/process/next_tick.js:188:7)</span><br><span class="line">    at Function.Module.runMain (module.js:667:11)</span><br><span class="line">    at startup (bootstrap_node.js:187:16)</span><br><span class="line">    at bootstrap_node.js:607:3</span><br><span class="line"></span><br><span class="line">原因</span><br><span class="line">.then 或 .catch 返回的值不能是 promise 本身，否则会造成死循环。</span><br></pre></td></tr></table></figure><p>十二、分析下列程序代码，得出运行结果，解释其原因</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Promise</span>.resolve(<span class="number">1</span>)</span><br><span class="line">  .then(<span class="number">2</span>)</span><br><span class="line">  .then(<span class="built_in">Promise</span>.resolve(<span class="number">3</span>))</span><br><span class="line">  .then(<span class="built_in">console</span>.log)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">运行结果</span><br><span class="line">1</span><br><span class="line"></span><br><span class="line">原因</span><br><span class="line">.then 或者 .catch 的参数期望是函数，传入非函数则会发生值穿透。</span><br></pre></td></tr></table></figure><p>十三、分析下列程序代码，得出运行结果，解释其原因</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Promise</span>.resolve()</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> <span class="title">success</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'error'</span>)</span><br><span class="line">  &#125;, <span class="function"><span class="keyword">function</span> <span class="title">fail1</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.error(<span class="string">'fail1: '</span>, e)</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function"><span class="keyword">function</span> <span class="title">fail2</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.error(<span class="string">'fail2: '</span>, e)</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">运行结果</span><br><span class="line">fail2: Error: error</span><br><span class="line">    at success (...)</span><br><span class="line">    at ...</span><br><span class="line"></span><br><span class="line">原因</span><br><span class="line">.then 可以接收两个参数，第一个是处理成功的函数，第二个是处理错误的函数。.catch 是 .then 第二个参数的简便写法，但是它们用法上有一点需要注意：.then 的第二个处理错误的函数捕获不了第一个处理成功的函数抛出的错误，而后续的 .catch 可以捕获之前的错误。</span><br></pre></td></tr></table></figure><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><p>一、模拟一个模板字符串的实现。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> address = <span class="string">'北京海淀区'</span></span><br><span class="line"><span class="keyword">let</span> name = <span class="string">'lala'</span></span><br><span class="line"><span class="keyword">let</span> str = <span class="string">'$&#123;name&#125;在$&#123;address&#125;上班...'</span></span><br><span class="line"><span class="comment">// 模拟一个方法 myTemplate(str) 最终输出 'lala在北京海淀区上班...'</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myTemplate</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// try it</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(myTemplate(str)) <span class="comment">// lala在北京海淀区上班...</span></span><br></pre></td></tr></table></figure><p>我的答案：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> address = <span class="string">'华北科技学院'</span></span><br><span class="line"><span class="keyword">let</span> name = <span class="string">'Arley'</span></span><br><span class="line"><span class="keyword">let</span> str = <span class="string">'$&#123;name&#125;在$&#123;address&#125;上学...'</span></span><br><span class="line"><span class="comment">// 模拟一个方法 myTemplate(str) 最终输出 'Arley在华北科技学院上学...'</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myTemplate</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">try</span> it</span><br><span class="line">  <span class="keyword">let</span> arr = str.match(<span class="regexp">/\$&#123;(.*?)&#125;/g</span>);</span><br><span class="line">  arr.forEach(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> itemIn = item.substring(<span class="number">2</span>, item.length - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">let</span> val = <span class="built_in">eval</span>(itemIn);</span><br><span class="line">    str = str.replace(item,val);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> str;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 人家的答案- -  一句话。</span></span><br><span class="line">  <span class="comment">// return str.replace(/\$\&#123;(.*?)\&#125;/g, (match, key) =&gt; eval(key));</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(myTemplate(str)) <span class="comment">// Arley在华北科技学院上学...</span></span><br></pre></td></tr></table></figure><p>顺便复习一下正则，原来<code>replace</code>可以这么用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">'$&#123;name&#125;在$&#123;address&#125;上学...'</span></span><br><span class="line"><span class="keyword">let</span> s = str.match(<span class="regexp">/\$\&#123;(.*?)\&#125;/g</span>);</span><br><span class="line">s.forEach(<span class="function">(<span class="params">item,key</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(item,key);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">str.replace(<span class="regexp">/\$\&#123;(.*?)\&#125;/g</span>, (match, key) =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(key,match);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// $&#123;name&#125; 0</span></span><br><span class="line"><span class="comment">// $&#123;address&#125; 1</span></span><br><span class="line"><span class="comment">// name $&#123;name&#125;</span></span><br><span class="line"><span class="comment">// address $&#123;address&#125;</span></span><br></pre></td></tr></table></figure><p>二、实现标签化模板(自定义模板规则)。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> name = <span class="string">'cc'</span></span><br><span class="line"><span class="keyword">const</span> gender = <span class="string">'male'</span></span><br><span class="line"><span class="keyword">const</span> hobby = <span class="string">'basketball'</span></span><br><span class="line"><span class="comment">// 实现tag最终输出 '姓名：**cc**，性别：**male**，爱好：**basketball**'</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tag</span>(<span class="params">strings</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// do it</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> str = tag<span class="string">`姓名：<span class="subst">$&#123;name&#125;</span>，性别：<span class="subst">$&#123;gender&#125;</span>，爱好：<span class="subst">$&#123;hobby&#125;</span>`</span></span><br><span class="line"><span class="built_in">console</span>.log(str) <span class="comment">// '姓名：**cc**，性别：**male**，爱好：**basketball**'</span></span><br></pre></td></tr></table></figure><p>我的答案：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> name = <span class="string">'cc'</span></span><br><span class="line"><span class="keyword">const</span> gender = <span class="string">'male'</span></span><br><span class="line"><span class="keyword">const</span> hobby = <span class="string">'basketball'</span></span><br><span class="line"><span class="comment">// 实现tag最终输出 '姓名：**cc**，性别：**male**，爱好：**basketball**'</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tag</span>(<span class="params">strings</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> strings.replace(<span class="regexp">/\$\&#123;(.*?)\&#125;/g</span>, (match, key) =&gt; <span class="built_in">eval</span>(key));<span class="comment">//HIHI 变聪明了 我也一句话～</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> str = tag(<span class="string">"`姓名：$&#123;name&#125;，性别：$&#123;gender&#125;，爱好：$&#123;hobby&#125;`"</span>)</span><br><span class="line"><span class="built_in">console</span>.log(str) <span class="comment">// '姓名：**cc**，性别：**male**，爱好：**basketball**'</span></span><br></pre></td></tr></table></figure><blockquote><p>字符串更多用法到 <a href="https://www.i7xy.cn/2018/10/18/ES6%E6%80%BB%E7%BB%93%E5%BD%92%E7%BA%B3/">ES6总结归纳</a></p></blockquote><h4 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> f = <span class="function"><span class="params">x</span> =&gt;</span> x; f(<span class="number">1</span>);  <span class="comment">//return 1</span></span><br><span class="line"><span class="keyword">var</span> f = <span class="function"><span class="params">x</span> =&gt;</span> &#123;x&#125;; f(<span class="number">1</span>); <span class="comment">//function(x)=&#123;x&#125;;</span></span><br><span class="line"><span class="keyword">var</span> f = <span class="function"><span class="params">x</span> =&gt;</span> (&#123;x&#125;) ;f(<span class="number">1</span>);<span class="comment">//return &#123;1&#125;(返回一个对象)</span></span><br></pre></td></tr></table></figure><blockquote><p>讲解在 <a href="https://www.i7xy.cn/2018/10/18/ES6%E6%80%BB%E7%BB%93%E5%BD%92%E7%BA%B3/">ES6总结归纳</a></p></blockquote><h4 id="解构"><a href="#解构" class="headerlink" title="解构"></a>解构</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 请使用 ES6 重构一下代码</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 第一题</span></span><br><span class="line"><span class="keyword">var</span> jsonParse = <span class="built_in">require</span>(<span class="string">'body-parser'</span>).jsonParse</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第二题</span></span><br><span class="line"><span class="keyword">var</span> body = request.body</span><br><span class="line"><span class="keyword">var</span> username = body.username</span><br><span class="line"><span class="keyword">var</span> password = body.password</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//第一题</span></span><br><span class="line"><span class="keyword">import</span> &#123; jsonParse &#125; <span class="keyword">from</span> <span class="string">'body-parser'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//第二题</span></span><br><span class="line"><span class="keyword">const</span> &#123; username, password &#125; = request.body</span><br><span class="line"><span class="comment">//const &#123; body, body: &#123; username, password &#125; &#125; = request</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;username&#125;</span> - - - <span class="subst">$&#123;password&#125;</span>`</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这年头，到处都是ES6…&lt;br&gt;持续更新ing…&lt;/p&gt;
    
    </summary>
    
      <category term="面试集锦" scheme="http://www.i7xy.cn/categories/%E9%9D%A2%E8%AF%95%E9%9B%86%E9%94%A6/"/>
    
    
      <category term="面试" scheme="http://www.i7xy.cn/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="ES6" scheme="http://www.i7xy.cn/tags/ES6/"/>
    
  </entry>
  
  <entry>
    <title>ES6总结归纳</title>
    <link href="http://www.i7xy.cn/2018/10/18/ES6%E6%80%BB%E7%BB%93%E5%BD%92%E7%BA%B3/"/>
    <id>http://www.i7xy.cn/2018/10/18/ES6总结归纳/</id>
    <published>2018-10-18T08:59:33.000Z</published>
    <updated>2019-01-28T12:17:17.367Z</updated>
    
    <content type="html"><![CDATA[<p>学习了ES6之后，感觉内容很多，保持二八原则，掌握好常用的、有用的这个可以让我们的开发快速起飞。</p><a id="more"></a><h4 id="一-变量声明const和let"><a href="#一-变量声明const和let" class="headerlink" title="一.变量声明const和let"></a>一.变量声明const和let</h4><ol><li><code>const</code> 和 <code>let</code> 的作用域为最近相邻的<code>{}</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="number">1</span>!==<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> test = <span class="string">'hello ES6'</span>;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(test);</span><br><span class="line">    <span class="comment">//let和const报错，var 定义的时候不报错</span></span><br><span class="line">    <span class="comment">// var会变量提升至函数顶部</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// var 时候 test = undefined；</span></span><br><span class="line">    <span class="comment">// let 和 const 报错：Uncaught ReferenceError: test is not defined</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">f();</span><br></pre></td></tr></table></figure><ol start="2"><li><code>const</code>定义变量之后不可以在修改值，但如果值为对象，仍可以修改对象内的赋值。</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> name = <span class="string">'a'</span></span><br><span class="line">name = <span class="string">'b'</span> </span><br><span class="line"><span class="comment">// 再次赋值此时会报错</span></span><br><span class="line"><span class="comment">// Uncaught TypeError: Assignment to constant variable.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> stu = &#123;</span><br><span class="line">  id:<span class="number">1</span>,</span><br><span class="line">  name:<span class="string">'lei'</span></span><br><span class="line">&#125;;</span><br><span class="line">stu.id = <span class="number">2</span>;</span><br><span class="line"><span class="built_in">console</span>.log(stu);<span class="comment">//不会报错</span></span><br></pre></td></tr></table></figure><ol start="3"><li>TDZ(暂时性死区)</li></ol><p>我们都知道，JS引擎扫描代码时，如果发现变量声明，用 <code>var</code> 声明变量时会将声明提升到函数或全局作用域的顶部。但是 <code>let</code> 或者 <code>const</code>，会将声明关进一个小黑屋也是<code>TDZ</code>(暂时性死区)，只有执行到变量声明这句语句时，变量才会从小黑屋被放出来，才能安全使用这个变量。</p><ol start="4"><li><p>面试题</p><blockquote><p>要求：更改代码，成功输出0到9；</p></blockquote><ul><li><p>题目代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> funcs = []</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">  funcs.push(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="built_in">console</span>.log(i) &#125;)</span><br><span class="line">&#125;</span><br><span class="line">funcs.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">func</span>) </span>&#123;</span><br><span class="line">  func()</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//结果输入 10次10</span></span><br></pre></td></tr></table></figure></li><li><p>我的投机取巧方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> funcs = []</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">  funcs.push(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="built_in">console</span>.log(i) &#125;)</span><br><span class="line">&#125;</span><br><span class="line">funcs.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">func,index</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// func()</span></span><br><span class="line">  <span class="built_in">console</span>.log(index);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>方案①</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ES6处理</span></span><br><span class="line"><span class="keyword">var</span> funcs = []</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">  funcs.push(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="built_in">console</span>.log(i) &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//funcs.forEach(function (func) &#123;</span></span><br><span class="line"><span class="comment">//  func()</span></span><br><span class="line"><span class="comment">//&#125;)</span></span><br><span class="line">funcs.forEach(<span class="function"><span class="params">func</span> =&gt;</span> func())</span><br></pre></td></tr></table></figure></li><li><p>方案②</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> funcs = []</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">  funcs.push(</span><br><span class="line">    (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="built_in">console</span>.log(i) &#125;)()</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// funcs.forEach(function (func) &#123;</span></span><br><span class="line"><span class="comment">//   func()</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"><span class="comment">// 直接在push的时候调用函数</span></span><br></pre></td></tr></table></figure></li></ul></li></ol><ul><li>知识回顾<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//forEach 回顾</span></span><br><span class="line"><span class="keyword">var</span> numbers = [<span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>];</span><br><span class="line">numbers.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item,index</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"num["</span> + index + <span class="string">"] = "</span>+item);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// num[0] = 4</span></span><br><span class="line"><span class="comment">// num[1] = 9</span></span><br><span class="line"><span class="comment">// num[2] = 16</span></span><br><span class="line"><span class="comment">// num[3] = 25</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="二-Promise"><a href="#二-Promise" class="headerlink" title="二.Promise"></a>二.Promise</h4><blockquote><p>解决回调函数的异步痛点，用同步代码实现异步功能。</p></blockquote><h5 id="then"><a href="#then" class="headerlink" title="then"></a>then</h5><p><strong>then的第二个参数reject(B)，基本省略，最后用catch解决。</strong></p><blockquote><p>如果then()方法中返回了一个参数值，那么返回的Promise将会变成接收状态。<br>如果then()方法中抛出了一个异常，那么返回的Promise将会变成拒绝状态。<br>如果then()方法调用resolve()方法，那么返回的Promise将会变成接收状态。<br>如果then()方法调用reject()方法，那么返回的Promise将会变成拒绝状态。<br>如果then()方法返回了一个未知状态(pending)的Promise新实例，那么返回的新Promise就是未知状态。<br>如果then()方法没有明确指定的resolve(data)/reject(data)/return data时，那么返回的新Promise就是接收状态，可以一层一层地往下传递。</p></blockquote><p>看专业术语迷糊…看代码中的解释就懂了。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(</span><br><span class="line">  <span class="comment">// A ：resolve</span></span><br><span class="line">  <span class="comment">// B : reject</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> (<span class="params">A, B</span>) </span>&#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 此处不执行A或者B ， 直接return 或者 不返回任何内容，下面的then将不执行</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      A(<span class="string">"获取数据完成"</span>);<span class="comment">//A是获取成功</span></span><br><span class="line">      <span class="comment">// 执行下面的then的第一个参数函数</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//AB同时存在，只运行第一个，所以要运行B，需要注释了A</span></span><br><span class="line">      B(<span class="string">"获取数据失败"</span>);</span><br><span class="line">      <span class="comment">//B是获取失败，执行下面的then的第二个参数函数</span></span><br><span class="line"></span><br><span class="line">    &#125;, <span class="number">500</span>)</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">promise.then(</span><br><span class="line">  <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 一. 运行下一个then的第一个函数</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"A"</span> + data);<span class="comment">//1. 不return 没返回任何内容</span></span><br><span class="line">    <span class="comment">// return "返回参数值"; //2. return一个参数值</span></span><br><span class="line">    <span class="comment">// return new Promise(function(A)&#123;A()&#125;); //3.调用了新的Promise的resolve方法，也就是A方法。注意：需要return，否则当做没情况1处理</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// --------------- 下面两种运行下一个then的第二个函数</span></span><br><span class="line">    <span class="comment">// return new Promise(function(A,B)&#123;B()&#125;);// 1.调用了新的Promise的reject方法，也就是B方法 注意要return.</span></span><br><span class="line">    <span class="keyword">throw</span>(<span class="string">"抛出异常"</span>); <span class="comment">// 2.抛出异常</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"B"</span> + data);<span class="comment">//上一个运行A()的话 此处不运行，运行B才运行。</span></span><br><span class="line">  &#125;</span><br><span class="line">).then(</span><br><span class="line">  <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"上面的then 1.没返回任何内容，2.或者返回参数值，3.或者调用resolve()方法"</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"上面的then1.抛出了一个异常，2.或者调用reject()方法"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h5 id="catch"><a href="#catch" class="headerlink" title="catch"></a>catch</h5><blockquote><p>catch()方法和then()方法一样，都会返回一个新的Promise对象，它主要用于捕获异步操作时出现的异常。因此，我们通常省略then()方法的第二个参数，把错误处理控制权转交给其后面的catch()函数，如下：</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(</span><br><span class="line">  <span class="function"><span class="keyword">function</span> (<span class="params">A</span>) </span>&#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      A(<span class="string">"获取数据完成"</span>);</span><br><span class="line">    &#125;, <span class="number">500</span>)</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">promise.then(</span><br><span class="line">  <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"上面执行了A"</span>);</span><br><span class="line">    <span class="keyword">throw</span> (<span class="string">"我要抛出异常"</span>)</span><br><span class="line">  &#125;</span><br><span class="line">).then(</span><br><span class="line">  <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"运行不到我了"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">).catch(</span><br><span class="line">  <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 最后的catch()方法可以捕获在这一条Promise链上的异常</span></span><br><span class="line">    <span class="built_in">console</span>.log(err);<span class="comment">// 出错：reject</span></span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h5 id="all"><a href="#all" class="headerlink" title="all"></a>all</h5><blockquote><p>合并多个promise异步之后的数据</p></blockquote><p>Promise.all里的任务列表[asyncTask(1),asyncTask(2),asyncTask(3)]，是按顺序发起的，由于它们都是异步的，互相之间并不阻塞，每个任务完成时机是不确定的。尽管如此，所有任务结束之后，它们的结果仍然是按顺序地映射到resultList里，这样就能和Promise.all里的任务列表[asyncTask(1),asyncTask(2),asyncTask(3)]一一对应起来。<code>(转)</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> getRandom = <span class="function"><span class="params">()</span> =&gt;</span> +(<span class="built_in">Math</span>.random() * <span class="number">1000</span>).toFixed(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> asyncTask = <span class="function"><span class="params">taskID</span> =&gt;</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> timeout = getRandom();</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`taskID=<span class="subst">$&#123;taskID&#125;</span> start.`</span>);</span><br><span class="line">  setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`taskID=<span class="subst">$&#123;taskID&#125;</span> finished in time=<span class="subst">$&#123;timeout&#125;</span>.`</span>);</span><br><span class="line">    resolve(taskID)</span><br><span class="line">  &#125;, timeout);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">Promise</span>.all([asyncTask(<span class="number">1</span>), asyncTask(<span class="number">2</span>), asyncTask(<span class="number">3</span>)])</span><br><span class="line">  .then(<span class="function"><span class="params">resultList</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'results:'</span>, resultList);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><h5 id="race"><a href="#race" class="headerlink" title="race"></a>race</h5><p>Promise.race()和Promise.all()类似，都接收一个可以迭代的参数，但是不同之处是Promise.race()的状态变化不是全部受参数内的状态影响，一旦参数内有一个值的状态发生的改变，那么该Promise的状态就是改变的状态。就跟race单词的字面意思一样，谁跑的快谁赢。如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> p1 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">  setTimeout(resolve, <span class="number">300</span>, <span class="string">'p1 doned'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p2 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">  setTimeout(resolve, <span class="number">50</span>, <span class="string">'p2 doned'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p3 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">  setTimeout(reject, <span class="number">100</span>, <span class="string">'p3 rejected'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">Promise</span>.race([p1, p2, p3]).then(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 显然p2更快，所以状态变成了fulfilled</span></span><br><span class="line">  <span class="comment">// 如果p3更快，那么状态就会变成rejected</span></span><br><span class="line">  <span class="built_in">console</span>.log(data); <span class="comment">// p2 doned</span></span><br><span class="line">&#125;).catch(<span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(err); <span class="comment">// 不执行</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="三-字符串"><a href="#三-字符串" class="headerlink" title="三.字符串"></a>三.字符串</h4><h5 id="字符模板"><a href="#字符模板" class="headerlink" title="字符模板"></a>字符模板</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="keyword">const</span> = <span class="string">"Js"</span>;</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"hello"</span> + name + <span class="string">"!!!&lt;BR&gt;"</span>); <span class="comment">//es5</span></span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">`es6 <span class="subst">$&#123;name&#125;</span>!!!&lt;BR&gt;`</span>); <span class="comment">//es6</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ES5</span></span><br><span class="line"><span class="keyword">var</span> msg = <span class="string">"Hi \</span></span><br><span class="line"><span class="string">man!</span></span><br><span class="line"><span class="string">"</span></span><br><span class="line"><span class="comment">// ES6</span></span><br><span class="line"><span class="keyword">const</span> template = <span class="string">`&lt;div&gt;</span></span><br><span class="line"><span class="string">    &lt;span&gt;hello world&lt;/span&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;`</span></span><br></pre></td></tr></table></figure><h5 id="ES6新加常用"><a href="#ES6新加常用" class="headerlink" title="ES6新加常用"></a>ES6新加常用</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.includes：判断是否包含然后直接返回布尔值 类似indexOf</span></span><br><span class="line"><span class="keyword">const</span> str = <span class="string">'hahay'</span></span><br><span class="line"><span class="built_in">console</span>.log(str.includes(<span class="string">'y'</span>)) <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.repeat: 获取字符串重复n次</span></span><br><span class="line"><span class="keyword">const</span> str = <span class="string">'he'</span></span><br><span class="line"><span class="built_in">console</span>.log(str.repeat(<span class="number">3</span>)) <span class="comment">// 'hehehe'</span></span><br><span class="line"><span class="comment">//如果你带入小数, Math.floor(num) 来处理</span></span><br><span class="line"><span class="comment">// s.repeat(3.1) 或者 s.repeat(3.9) 都当做成 s.repeat(3) 来处理</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. startsWith 和 endsWith 判断是否以 给定文本 开始或者结束</span></span><br><span class="line"><span class="keyword">const</span> str =  <span class="string">'hello world!'</span></span><br><span class="line"><span class="built_in">console</span>.log(str.startsWith(<span class="string">'hello'</span>)) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(str.endsWith(<span class="string">'!'</span>)) <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 4. padStart 和 padEnd 填充字符串，应用场景：时分秒</span></span><br><span class="line"><span class="comment">// 上面代码中，padStart 和 padEnd 一共接受2个参数，第一个是用来指定字符串的最小长度，第二个参数是用来补全长度的字符串。</span></span><br><span class="line"><span class="comment">// 1）如果原字符串长度等于或大于指定得最小长度，则返回原字符串。</span></span><br><span class="line">setInterval(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line">    <span class="keyword">const</span> hours = now.getHours().toString()</span><br><span class="line">    <span class="keyword">const</span> minutes = now.getMinutes().toString()</span><br><span class="line">    <span class="keyword">const</span> seconds = now.getSeconds().toString()</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;hours.padStart(<span class="number">2</span>, <span class="number">0</span>)&#125;</span>:<span class="subst">$&#123;minutes.padStart(<span class="number">2</span>, <span class="number">0</span>)&#125;</span>:<span class="subst">$&#123;seconds.padStart(<span class="number">2</span>, <span class="number">0</span>)&#125;</span>`</span>)</span><br><span class="line">&#125;, <span class="number">1000</span>)</span><br></pre></td></tr></table></figure><h4 id="四-函数"><a href="#四-函数" class="headerlink" title="四.函数"></a>四.函数</h4><h5 id="函数默认参数"><a href="#函数默认参数" class="headerlink" title="函数默认参数"></a>函数默认参数</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">num = <span class="number">666</span></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(num)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h5><p>三个特点</p><ul><li>不需要 <code>function</code> 关键字来创建函数</li><li>省略 <code>return</code> 关键字</li><li>继承当前上下文的 <code>this</code> 关键字</li></ul><p>当你的函数有且仅有一个参数的时候，是可以省略掉括号的。当你函数返回有且仅有一个表达式的时候可以省略{} 和 return；例如:</p><p><code>var people = name =&gt; &#39;hello&#39; + name</code><br><code>var people = () =&gt; &#39;hello i7xy&#39;</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> hiPeople = <span class="function">(<span class="params">name</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> hi = <span class="string">'hello'</span> + name</span><br><span class="line">    <span class="keyword">return</span> hi</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="箭头函数需要注意的地方"><a href="#箭头函数需要注意的地方" class="headerlink" title="箭头函数需要注意的地方"></a>箭头函数需要注意的地方</h6><p>当要求动态上下文的时候，就不能够使用箭头函数，也就是this的固定化。</p><p>1、在使用=&gt;定义函数的时候，this的指向是定义时所在的对象，而不是使用时所在的对象；<br>2、不能够用作构造函数，这就是说，不能够使用new命令，否则就会抛出一个错误；<br>3、不能够使用arguments对象；<br>4、不能使用yield命令；</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>() &#123;</span><br><span class="line">    <span class="keyword">this</span>.type = <span class="string">"animal"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  say(val) &#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="keyword">this</span>); <span class="comment">//Animal</span></span><br><span class="line">      <span class="built_in">console</span>.log(<span class="keyword">this</span>.type + <span class="string">' says '</span> + val);</span><br><span class="line">    &#125;, <span class="number">1000</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> animal = <span class="keyword">new</span> Animal();</span><br><span class="line">animal.say(<span class="string">"hi"</span>); <span class="comment">//animal says hi</span></span><br></pre></td></tr></table></figure><h4 id="五-对象拓展（转）"><a href="#五-对象拓展（转）" class="headerlink" title="五.对象拓展（转）"></a>五.对象拓展（转）</h4><p>对象初始化简写</p><p>ES5我们对于对象都是以键值对的形式书写，是有可能出现键值对重名的。例如：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">people</span>(<span class="params">name, age</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        name: name,</span><br><span class="line">        age: age</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>键值对重名，ES6可以简写如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">people</span>(<span class="params">name, age</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        name,</span><br><span class="line">        age</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ES6 同样改进了为对象字面量方法赋值的语法。ES5为对象添加方法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> people = &#123;</span><br><span class="line">  name: <span class="string">'lux'</span>,</span><br><span class="line">  getName: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="keyword">this</span>.name)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ES6通过省略冒号与 function 关键字，将这个语法变得更简洁</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> people = &#123;</span><br><span class="line">    name: <span class="string">'lux'</span>,</span><br><span class="line">    getName () &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ES6 对象提供了 <code>Object.assign()</code>这个方法来实现浅复制。<br>Object.assign() 可以把任意多个源对象自身可枚举的属性拷贝给目标对象，然后返回目标对象。第一参数即为目标对象。在实际项目中，我们为了不改变源对象。一般会把目标对象传为{}<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> objA = &#123; <span class="attr">name</span>: <span class="string">'cc'</span>, <span class="attr">age</span>: <span class="number">18</span> &#125;</span><br><span class="line"><span class="keyword">const</span> objB = &#123; <span class="attr">address</span>: <span class="string">'beijing'</span> &#125;</span><br><span class="line"><span class="keyword">const</span> objC = &#123;&#125; <span class="comment">// 这个为目标对象</span></span><br><span class="line"><span class="keyword">const</span> obj = <span class="built_in">Object</span>.assign(objC, objA, objB)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 我们将 objA objB objC obj 分别输出看看</span></span><br><span class="line"><span class="built_in">console</span>.log(objA)   <span class="comment">// &#123; name: 'cc', age: 18 &#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(objB) <span class="comment">// &#123; address: 'beijing' &#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(objC) <span class="comment">// &#123; name: 'cc', age: 18, address: 'beijing' &#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(obj) <span class="comment">// &#123; name: 'cc', age: 18, address: 'beijing' &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 是的，目标对象ObjC的值被改变了。</span></span><br><span class="line"><span class="comment">// so，如果objC也是你的一个源对象的话。请在objC前面填在一个目标对象&#123;&#125;</span></span><br><span class="line"><span class="built_in">Object</span>.assign(&#123;&#125;, objC, objA, objB)</span><br></pre></td></tr></table></figure></p><h4 id="六-更方便的数据访问–解构"><a href="#六-更方便的数据访问–解构" class="headerlink" title="六.更方便的数据访问–解构"></a>六.更方便的数据访问–解构</h4><p>数组和对象是JS中最常用也是最重要表示形式。为了简化提取信息，ES6新增了解构，这是将一个数据结构分解为更小的部分的过程</p><p>ES5我们提取对象中的信息形式如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> people = &#123;</span><br><span class="line">  name: <span class="string">'man'</span>,</span><br><span class="line">  age: <span class="number">20</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> name = people.name</span><br><span class="line"><span class="keyword">const</span> age = people.age</span><br><span class="line"><span class="built_in">console</span>.log(name + <span class="string">' --- '</span> + age)</span><br></pre></td></tr></table></figure><p>是不是觉得很熟悉，没错，在ES6之前我们就是这样获取对象信息的，一个一个获取。现在，解构能让我们从对象或者数组里取出数据存为变量，例如</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对象</span></span><br><span class="line"><span class="keyword">const</span> people = &#123;</span><br><span class="line">  name: <span class="string">'man'</span>,</span><br><span class="line">  age: <span class="number">20</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> &#123; name, age &#125; = people</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;name&#125;</span> --- <span class="subst">$&#123;age&#125;</span>`</span>)</span><br><span class="line"><span class="comment">//数组</span></span><br><span class="line"><span class="keyword">const</span> color = [<span class="string">'red'</span>, <span class="string">'blue'</span>]</span><br><span class="line"><span class="keyword">const</span> [first, second] = color</span><br><span class="line"><span class="built_in">console</span>.log(first) <span class="comment">//'red'</span></span><br><span class="line"><span class="built_in">console</span>.log(second) <span class="comment">//'blue'</span></span><br></pre></td></tr></table></figure><h4 id="七-Spread-Operator-展开运算符…"><a href="#七-Spread-Operator-展开运算符…" class="headerlink" title="七.Spread Operator 展开运算符…"></a>七.Spread Operator 展开运算符…</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//数组</span></span><br><span class="line"><span class="keyword">const</span> color = [<span class="string">'red'</span>, <span class="string">'yellow'</span>]</span><br><span class="line"><span class="keyword">const</span> colorful = [...color, <span class="string">'green'</span>, <span class="string">'pink'</span>]</span><br><span class="line"><span class="built_in">console</span>.log(colorful) <span class="comment">//[red, yellow, green, pink]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//对象</span></span><br><span class="line"><span class="keyword">const</span> alp = &#123; <span class="attr">fist</span>: <span class="string">'a'</span>, <span class="attr">second</span>: <span class="string">'b'</span>&#125;</span><br><span class="line"><span class="keyword">const</span> alphabets = &#123; ...alp, <span class="attr">third</span>: <span class="string">'c'</span> &#125;</span><br><span class="line"><span class="built_in">console</span>.log(alphabets) <span class="comment">//&#123; "fist": "a", "second": "b", "third": "c"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// const objA = &#123; name: 'cc', age: 18 &#125;</span></span><br><span class="line"><span class="comment">// const objB = &#123; address: 'beijing' &#125;</span></span><br><span class="line"><span class="comment">// const objC = &#123;&#125; // 这个为目标对象</span></span><br><span class="line"><span class="comment">// const obj = Object.assign(objC, objA, objB)</span></span><br></pre></td></tr></table></figure><p>有时候我们想获取数组或者对象除了前几项或者除了某几项的其他项</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//数组</span></span><br><span class="line"><span class="keyword">const</span> number = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="keyword">const</span> [first, ...rest] = number</span><br><span class="line"><span class="built_in">console</span>.log(rest) <span class="comment">//2,3,4,5</span></span><br><span class="line"><span class="comment">//对象</span></span><br><span class="line"><span class="keyword">const</span> user = &#123;</span><br><span class="line">    username: <span class="string">'lux'</span>,</span><br><span class="line">    gender: <span class="string">'female'</span>,</span><br><span class="line">    age: <span class="number">19</span>,</span><br><span class="line">    address: <span class="string">'peking'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> &#123; username, ...rest &#125; = user</span><br><span class="line"><span class="built_in">console</span>.log(rest) <span class="comment">//&#123;"address": "peking", "age": 19, "gender": "female"</span></span><br></pre></td></tr></table></figure><h4 id="八-SET-数组去重"><a href="#八-SET-数组去重" class="headerlink" title="八.SET - 数组去重"></a>八.SET - 数组去重</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> set = <span class="keyword">new</span> <span class="built_in">Set</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">4</span>])</span><br><span class="line"><span class="built_in">console</span>.log([...set] )<span class="comment">// [1,2,3,4]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Array</span>.from(<span class="keyword">new</span> <span class="built_in">Set</span>([<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>]))); <span class="comment">//[2,3,5,6]</span></span><br></pre></td></tr></table></figure><h4 id="九-import-和-export"><a href="#九-import-和-export" class="headerlink" title="九.import 和 export"></a>九.import 和 export</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//A.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">let</span> A = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">Test</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span></span>&#123;cat()&#123;&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//importX.js</span></span><br><span class="line"><span class="comment">// import &#123; A, Test, Hello &#125; from './A';</span></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> lesson <span class="keyword">from</span> <span class="string">'./A'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(lesson.A, lesson.Test, lesson.Hello)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 更好的写法</span></span><br><span class="line"><span class="keyword">let</span> A = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Test</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hello</span></span>&#123;cat()&#123;&#125;&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  A,</span><br><span class="line">  Test,</span><br><span class="line">  Hello</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// importX.js</span></span><br><span class="line"><span class="keyword">import</span> Lesson <span class="keyword">from</span> <span class="string">'./A'</span></span><br></pre></td></tr></table></figure><h4 id="十-class"><a href="#十-class" class="headerlink" title="十.class"></a>十.class</h4><p>ES5继承与ES6继承的写法大比拼</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ES5父类</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">User</span>(<span class="params">name, age</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.name = name;</span><br><span class="line">  <span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//静态方法</span></span><br><span class="line">User.getClassName = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'User'</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//类的方法</span></span><br><span class="line">User.prototype.changeName = <span class="function"><span class="keyword">function</span> (<span class="params">name</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;;</span><br><span class="line">User.prototype.changeAge = <span class="function"><span class="keyword">function</span> (<span class="params">name</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">Object</span>.defineProperty(User.prototype, <span class="string">'info'</span>, &#123;</span><br><span class="line">  get() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'name:'</span> + <span class="keyword">this</span>.name + <span class="string">' | age:'</span> + <span class="keyword">this</span>.age;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">var</span> user = <span class="keyword">new</span> User(<span class="string">'feng'</span>, <span class="number">23</span>);</span><br><span class="line"><span class="built_in">console</span>.log(user.info); <span class="comment">// name:feng | age:23</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Manager</span>(<span class="params">name, age, password</span>) </span>&#123;</span><br><span class="line">  User.call(<span class="keyword">this</span>, name, age);</span><br><span class="line">  <span class="keyword">this</span>.password = password;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//继承静态方法</span></span><br><span class="line">Manager.__proto__ = User;</span><br><span class="line"><span class="comment">//继承prototype方法</span></span><br><span class="line">Manager.prototype = User.prototype;</span><br><span class="line"><span class="comment">//添加新方法</span></span><br><span class="line">Manager.prototype.changePassword = <span class="function"><span class="keyword">function</span> (<span class="params">pwd</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.password = password;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> manager = <span class="keyword">new</span> Manager(<span class="string">'feng'</span>, <span class="number">22</span>, <span class="string">'556677'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(manager.name); <span class="comment">//feng</span></span><br><span class="line"><span class="comment">//调用changeName方法</span></span><br><span class="line">manager.changeName(<span class="string">'feng xiong'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(manager.name); <span class="comment">//feng xiong</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ES6父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(name, age) &#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//静态方法</span></span><br><span class="line">  <span class="keyword">static</span> getClassName() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'User'</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//类的方法</span></span><br><span class="line">  changeName(name) &#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">  &#125;</span><br><span class="line">  changeAge(age) &#123;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">  &#125;</span><br><span class="line">  get info() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'name:'</span> + <span class="keyword">this</span>.name + <span class="string">' | age:'</span> + <span class="keyword">this</span>.age;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> user = <span class="keyword">new</span> User(<span class="string">'fengg'</span>, <span class="number">233</span>);</span><br><span class="line"><span class="built_in">console</span>.log(user.info); <span class="comment">// name:fengg | age:233</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Manager</span> <span class="keyword">extends</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(name, age, password) &#123;</span><br><span class="line">    <span class="keyword">super</span>(name, age);</span><br><span class="line">    <span class="keyword">this</span>.password = password;</span><br><span class="line">  &#125;</span><br><span class="line">  changePassword(password) &#123;</span><br><span class="line">    <span class="keyword">this</span>.password = password;</span><br><span class="line">  &#125;</span><br><span class="line">  get info()&#123;</span><br><span class="line">      <span class="keyword">var</span> info = <span class="keyword">super</span>.info;</span><br><span class="line">      <span class="built_in">console</span>.log(info);</span><br><span class="line">      <span class="keyword">return</span> info + <span class="string">' -- new'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> manager = <span class="keyword">new</span> Manager(<span class="string">'ES6feng'</span>, <span class="number">22</span>, <span class="string">'556677'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(manager.name); <span class="comment">//ES6feng</span></span><br><span class="line">manager.changeName(<span class="string">'jack'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(manager.name); <span class="comment">//jack</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(manager.info);</span><br><span class="line"><span class="comment">// name:jack | age:22</span></span><br><span class="line"><span class="comment">// test.js:88 name:jack | age:22 -- new</span></span><br></pre></td></tr></table></figure><h4 id="十一-Symbol"><a href="#十一-Symbol" class="headerlink" title="十一.Symbol"></a>十一.Symbol</h4><p><code>symbol</code>声明的变量是独一无二的。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="built_in">Symbol</span>();</span><br><span class="line"><span class="keyword">let</span> b = <span class="built_in">Symbol</span>();</span><br><span class="line">a === b;<span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> c = <span class="built_in">Symbol</span>.for(<span class="string">'ha'</span>);<span class="comment">//c = Symbol(ha)</span></span><br><span class="line"><span class="keyword">let</span> d = <span class="built_in">Symbol</span>.for(<span class="string">'ha'</span>);<span class="comment">//d = Symbol(ha)</span></span><br><span class="line">c === d;<span class="comment">// true</span></span><br></pre></td></tr></table></figure><p>使用场景：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a1=<span class="built_in">Symbol</span>.for(<span class="string">'abc'</span>);</span><br><span class="line"><span class="keyword">let</span> obj=&#123;</span><br><span class="line">  [a1]:<span class="string">'123'</span>,</span><br><span class="line">  <span class="string">'abc'</span>:<span class="number">345</span>,</span><br><span class="line">  <span class="string">'c'</span>:<span class="number">456</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'obj'</span>,obj);<span class="comment">//&#123;abc:345 , c:456 ,Symbol(abc):"123"&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> [key,value] <span class="keyword">of</span> <span class="built_in">Object</span>.entries(obj))&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'let of'</span>,key,value);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// let of abc 345</span></span><br><span class="line"><span class="comment">// let of c 456</span></span><br><span class="line"><span class="comment">// PS:取不到Symbol的成员</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.getOwnPropertySymbols(obj).forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(obj[item]);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 123 只获取Symbol</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Reflect</span>.ownKeys(obj).forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'ownkeys'</span>,item,obj[item]);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// ownkeys abc 345</span></span><br><span class="line"><span class="comment">// ownkeys c 456</span></span><br><span class="line"><span class="comment">// ownkeys Symbol(abc) 123</span></span><br></pre></td></tr></table></figure><h4 id="十二-Proxy"><a href="#十二-Proxy" class="headerlink" title="十二.Proxy"></a>十二.Proxy</h4><blockquote><p>对<code>对象</code>的读取和设置进行拦截操作。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="keyword">let</span> obj = &#123;</span><br><span class="line">    id: <span class="number">1</span>,</span><br><span class="line">    name: <span class="string">"arley"</span>,</span><br><span class="line">    hobby: <span class="string">"学习"</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> proxy = <span class="keyword">new</span> <span class="built_in">Proxy</span>(obj, &#123;</span><br><span class="line">    <span class="comment">// 拦截设置</span></span><br><span class="line">    set(target, key, value) &#123;</span><br><span class="line">      <span class="keyword">if</span> (key === <span class="string">"hobby"</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> target[key] = <span class="string">"我爱"</span> + value;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 拦截获取</span></span><br><span class="line">    get(target, key) &#123;</span><br><span class="line">      <span class="keyword">if</span> (target[key] === <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> value = <span class="built_in">String</span>(target[key]);</span><br><span class="line">        <span class="keyword">return</span> target[key] = <span class="string">"2016070143"</span> + value.padStart(<span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (target[key] === <span class="string">"arley"</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> target[key] = <span class="string">"我是计科三班的同学."</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> target[key];</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">//拦截 key in object 操作</span></span><br><span class="line">    has(target,key)&#123;</span><br><span class="line">      <span class="keyword">if</span>(key === <span class="string">"name"</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> target[key];</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// console.log(proxy);</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 1.</span></span><br><span class="line">  <span class="built_in">console</span>.log(proxy.name);</span><br><span class="line">  <span class="comment">// 当获取到的 target[key] === "arley" 的时候，返回 "我是计科三班的同学.";</span></span><br><span class="line">  <span class="comment">// 所以输出为：我是计科三班的同学.</span></span><br><span class="line">  <span class="comment">// 此时的获取器 get 中的值为：</span></span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">    key = "name"</span></span><br><span class="line"><span class="comment">    target = Object &#123;id: 1, name: "arley", hobby: "学习"&#125;</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 2.</span></span><br><span class="line">  <span class="built_in">console</span>.log(proxy.id)</span><br><span class="line">  <span class="comment">// 同1. 当id为1的时候，加入前缀</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 3.</span></span><br><span class="line">  proxy.hobby = <span class="string">"ES6"</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(proxy.hobby);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// set 的第三个参数 value 为 = 后面的内容，即ES6.</span></span><br><span class="line">  <span class="comment">// 所以设置之后的proxy.hobby = "我爱ES6",自动加上了前缀</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 4. obj 对象也会跟着改变  且  proxy 和 log值一样了。</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"obj:"</span> + <span class="built_in">JSON</span>.stringify(obj));</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"proxy:"</span> + <span class="built_in">JSON</span>.stringify(proxy));</span><br><span class="line">  <span class="comment">// obj:&#123;"id":"201607014301","name":"我是计科三班的同学.","hobby":"我爱ES6"&#125;</span></span><br><span class="line">  <span class="comment">// proxy:&#123;"id":"201607014301","name":"我是计科三班的同学.","hobby":"我爱ES6"&#125;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 5.拦截 key in object</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"key-&gt;"</span>,<span class="string">"name"</span> <span class="keyword">in</span> proxy,<span class="string">"id"</span> <span class="keyword">in</span> proxy,<span class="string">"id"</span> <span class="keyword">in</span> obj);</span><br><span class="line">  <span class="comment">// key-&gt; true false true  注意：in obj 会返回true，因为没经过Proxy</span></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="十三-Iterator"><a href="#十三-Iterator" class="headerlink" title="十三.Iterator"></a>十三.Iterator</h4><blockquote><p>以后学…</p></blockquote><h4 id="十四-Generator"><a href="#十四-Generator" class="headerlink" title="十四.Generator"></a>十四.Generator</h4><blockquote><p>以后学…</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习了ES6之后，感觉内容很多，保持二八原则，掌握好常用的、有用的这个可以让我们的开发快速起飞。&lt;/p&gt;
    
    </summary>
    
      <category term="ES6" scheme="http://www.i7xy.cn/categories/ES6/"/>
    
    
      <category term="ES6" scheme="http://www.i7xy.cn/tags/ES6/"/>
    
  </entry>
  
  <entry>
    <title>记一次原生css3实现响应式布局 - timeLine</title>
    <link href="http://www.i7xy.cn/2018/10/06/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%8E%9F%E7%94%9Fcss3%E5%AE%9E%E7%8E%B0%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B8%83%E5%B1%80-timeLine/"/>
    <id>http://www.i7xy.cn/2018/10/06/记一次原生css3实现响应式布局-timeLine/</id>
    <published>2018-10-06T08:40:44.000Z</published>
    <updated>2019-01-28T12:18:03.116Z</updated>
    
    <content type="html"><![CDATA[<p>慕课网响应式布局教程 - 时间轴实战</p><a id="more"></a><p>1.分大 - 中 - 小 三种样式</p><ul><li>大 &gt;768px</li><li>中 425 &lt; x＜=768</li><li>小 &lt;=425px</li></ul><p>2.老师给的设计图<br><img src="https://i.loli.net/2018/10/06/5bb876513e752.png" alt="大"></p><p><img src="https://i.loli.net/2018/10/06/5bb87661e6cd2.png" alt="中"></p><p><img src="https://i.loli.net/2018/10/06/5bb8767c2792b.png" alt="小"></p><h4 id="我的代码"><a href="#我的代码" class="headerlink" title="我的代码"></a>我的代码</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">content</span>=<span class="string">"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Time-line<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./css/normalize.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./css/main.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span>Responsive Timeline<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"item-all"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item cleanfix"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item-left"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"left-data"</span>&gt;</span>2018-10-05<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"left-time"</span>&gt;</span>14:10<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item-right"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right-wrap"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"right-title"</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Cumque,</span><br><span class="line">                            iste.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"right-desc"</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequatur eius</span><br><span class="line">                            illum libero maiores nam optio, praesentium provident sit suscipit! Aliquam animi asperiores</span><br><span class="line">                            consequuntur eaque facere, fugiat ipsa, ipsum libero magni officiis praesentium provident</span><br><span class="line">                            sequi suscipit vitae voluptatem voluptates voluptatibus. Beatae commodi cumque dignissimos</span><br><span class="line">                            doloremque ea facere id impedit ipsum iure mollitia natus pariatur, possimus quidem tempora</span><br><span class="line">                            vero? Dolorem, enim eos esse et eveniet excepturi iste laboriosam laudantium odit sit</span><br><span class="line">                            temporibus velit, veritatis voluptatem. Alias animi dicta ducimus, ipsam quidem repudiandae</span><br><span class="line">                            sint? Architecto atque beatae, consequuntur debitis nihil odit quo similique tenetur</span><br><span class="line">                            voluptates! Ad beatae, commodi illo molestiae quisquam sed veniam.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item cleanfix"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item-left"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"left-data"</span>&gt;</span>2018-10-05<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"left-time"</span>&gt;</span>15:30<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item-right"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right-wrap"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"right-title"</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Neque,</span><br><span class="line">                            odio.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"right-desc"</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aspernatur</span><br><span class="line">                            dolorum enim id maxime quas qui reprehenderit sequi unde voluptatum. Accusantium consectetur</span><br><span class="line">                            ea impedit ipsam laboriosam perspiciatis quam! Architecto asperiores dolores doloribus</span><br><span class="line">                            ducimus enim esse fuga, harum iste iure libero maiores odit, officiis quae quibusdam quis</span><br><span class="line">                            sint veniam. Aperiam cupiditate, enim esse eum exercitationem fuga iste iusto perspiciatis</span><br><span class="line">                            sequi voluptatem! Aliquid animi asperiores at corporis, dolores eligendi laudantium libero</span><br><span class="line">                            minus non nostrum odio porro quo rem repellat sapiente sed sint, unde?<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item cleanfix"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item-left"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"left-data"</span>&gt;</span>2018-10-05<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"left-time"</span>&gt;</span>16:40<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item-right"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right-wrap"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"right-title"</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"right-desc"</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aspernatur autem</span><br><span class="line">                            cumque delectus, dolor doloribus ducimus eius error esse expedita explicabo hic incidunt</span><br><span class="line">                            laboriosam laudantium non obcaecati odio quae quam, quidem rem similique sit sunt temporibus</span><br><span class="line">                            ullam veritatis voluptate voluptatem, voluptatum. Aut commodi, debitis distinctio dolorum,</span><br><span class="line">                            ducimus eius eum excepturi facere fuga impedit molestias nam odio optio praesentium</span><br><span class="line">                            quibusdam quisquam reprehenderit repudiandae rerum saepe sint suscipit totam veniam. At</span><br><span class="line">                            dolores maxime officia quas repellendus rerum tempora tenetur? Aspernatur consectetur</span><br><span class="line">                            doloremque ea inventore maxime, sequi suscipit! Distinctio et numquam temporibus.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 大 &gt;768px</span></span><br><span class="line"><span class="comment">* 中 425 &lt; x＜=768</span></span><br><span class="line"><span class="comment">* 小 &lt;=425px</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*-----------------*/</span></span><br><span class="line"><span class="selector-class">.cleanfix</span><span class="selector-pseudo">:before</span>,</span><br><span class="line"><span class="selector-class">.cleanfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: table;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">' '</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cleanfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*-----------------*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">media</span> screen and (min-width: <span class="number">768px</span>) &#123;</span><br><span class="line">    <span class="selector-class">.container</span> &#123;</span><br><span class="line">        <span class="attribute">max-width</span>: <span class="number">1080px</span>;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">90%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">media</span> screen and (max-width: <span class="number">768px</span>)&#123;</span><br><span class="line">    <span class="selector-class">.container</span>&#123;</span><br><span class="line">        <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">1rem</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.title</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#47a3da</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">500</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">2.5rem</span>;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> screen and (max-width: <span class="number">768px</span>)&#123;</span><br><span class="line">    <span class="selector-class">.title</span>&#123;</span><br><span class="line">        <span class="attribute">text-align</span>: center;</span><br><span class="line">        <span class="attribute">margin-top</span>: <span class="number">1.5rem</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.main</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">5rem</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.item-all</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">' '</span>;</span><br><span class="line">    <span class="attribute">width</span>: .<span class="number">5rem</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#afdcf8</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">25%</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> screen and (max-width: <span class="number">768px</span>) and  (min-width: <span class="number">425px</span>)&#123;</span><br><span class="line">    <span class="selector-class">.item-all</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">        <span class="attribute">left</span>: <span class="number">22%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">media</span> screen and (max-width: <span class="number">425px</span>) &#123;</span><br><span class="line">    <span class="selector-class">.item-all</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">        <span class="attribute">display</span>: none;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.main</span> &#123;</span><br><span class="line">        <span class="attribute">margin-top</span>: <span class="number">2rem</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item-all</span> <span class="selector-class">.item</span><span class="selector-pseudo">:nth-child(2n)</span> <span class="selector-class">.right-wrap</span>,</span><br><span class="line"><span class="selector-class">.item-all</span> <span class="selector-class">.item</span><span class="selector-pseudo">:nth-child(2n)</span> <span class="selector-class">.item-right</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#3594CB</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.item-all</span> <span class="selector-class">.item</span><span class="selector-pseudo">:nth-child(2n+1)</span> <span class="selector-class">.right-wrap</span>,</span><br><span class="line"><span class="selector-class">.item-all</span> <span class="selector-class">.item</span><span class="selector-pseudo">:nth-child(2n+1)</span> <span class="selector-class">.item-right</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#6CBFEE</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item-all</span>&#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">2rem</span>;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> screen and (max-width: <span class="number">768px</span>) and (min-width: <span class="number">425px</span>)&#123;</span><br><span class="line">    <span class="selector-class">.item</span> &#123;</span><br><span class="line">        <span class="attribute">margin-bottom</span>: <span class="number">1rem</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item-left</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">30%</span>;</span><br><span class="line">    <span class="attribute">padding-right</span>: <span class="number">5rem</span>;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> screen and (max-width: <span class="number">768px</span>) and (min-width: <span class="number">425px</span>)&#123;</span><br><span class="line">    <span class="selector-class">.item-left</span> &#123;</span><br><span class="line">        <span class="attribute">padding-right</span>: <span class="number">10%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item-right</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">70%</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.left-data</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1rem</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#bdd0db</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">text-align</span>: right;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> screen and (max-width: <span class="number">768px</span>) and (min-width: <span class="number">425px</span>)&#123;</span><br><span class="line">    <span class="selector-class">.left-data</span> &#123;</span><br><span class="line">        <span class="attribute">text-align</span>: left;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item-all</span> <span class="selector-class">.item</span><span class="selector-pseudo">:nth-child(2n)</span> <span class="selector-class">.left-time</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#3594CB</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item-all</span> <span class="selector-class">.item</span><span class="selector-pseudo">:nth-child(2n+1)</span> <span class="selector-class">.left-time</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#6CBFEE</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.left-time</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">text-align</span>: right;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">3rem</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: .<span class="number">2rem</span>;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> screen and (max-width: <span class="number">768px</span>) and (min-width: <span class="number">425px</span>)&#123;</span><br><span class="line">    <span class="selector-class">.left-time</span> &#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">2rem</span>;</span><br><span class="line">        <span class="attribute">text-align</span>: left;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.right-wrap</span> &#123;</span><br><span class="line">    <span class="comment">/*background-color: #6CBFEE;*/</span></span><br><span class="line">    <span class="attribute">border-radius</span>: .<span class="number">4rem</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">2rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.item-right</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">' '</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1.2rem</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">1.2rem</span>;</span><br><span class="line">    <span class="comment">/*background-color: #6CBFEE;*/</span></span><br><span class="line">    <span class="attribute">left</span>: -.<span class="number">5rem</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">2rem</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(45deg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.right-title</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">600</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1.5rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.right-title</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">' '</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: .<span class="number">8rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.right-desc</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">media</span> screen and (max-width: <span class="number">425px</span>) &#123;</span><br><span class="line">    <span class="selector-class">.item-left</span> &#123;</span><br><span class="line">        <span class="attribute">float</span>: none;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">display</span>: block;</span><br><span class="line">        <span class="attribute">position</span>: relative;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.item-right</span> &#123;</span><br><span class="line">        <span class="attribute">float</span>: none;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">display</span>: block;</span><br><span class="line">        <span class="attribute">position</span>: relative;</span><br><span class="line">        <span class="attribute">margin-top</span>: <span class="number">1rem</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.left-time</span>&#123;</span><br><span class="line">        <span class="attribute">text-align</span>: left;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">2rem</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.left-data</span>&#123;</span><br><span class="line">        <span class="attribute">text-align</span>: left;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.item-right</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">        <span class="attribute">position</span>: absolute;</span><br><span class="line">        <span class="attribute">content</span>: <span class="string">' '</span>;</span><br><span class="line">        <span class="attribute">display</span>: block;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">1.2rem</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">1.2rem</span>;</span><br><span class="line">        <span class="comment">/* background-color: #6CBFEE; */</span></span><br><span class="line">        <span class="attribute">left</span>: <span class="number">2rem</span>;</span><br><span class="line">        <span class="attribute">top</span>: -.<span class="number">5rem</span>;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(45deg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="老师的代码"><a href="#老师的代码" class="headerlink" title="老师的代码"></a>老师的代码</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">class</span>=<span class="string">"no-js"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge,chrome=1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Responsive Timeline<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"css/style.css"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">"clearfix"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Responsive Timeline<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"tmtimeline"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">time</span> <span class="attr">class</span>=<span class="string">"tmtime"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>2016-05-01<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span>&gt;</span>18:30<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">time</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tmlabel"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Cupiditate, neque.<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquid architecto at atque consequatur</span><br><span class="line">                        consequuntur corporis dolor facere, fuga laborum natus, nihil rem repudiandae temporibus ullam</span><br><span class="line">                        ut veniam veritatis voluptas voluptates. Aliquam assumenda eius exercitationem hic ipsa numquam</span><br><span class="line">                        quam quis ratione, repellat, reprehenderit sunt, ullam! Accusamus, ad aliquid asperiores</span><br><span class="line">                        aspernatur at consequuntur cupiditate delectus deleniti dignissimos doloremque ea enim error, et</span><br><span class="line">                        excepturi explicabo facere fuga illo impedit iste laudantium minima molestias non nulla odit</span><br><span class="line">                        optio quos repellat sequi similique tempore vel veniam, vero voluptates voluptatum! At, cum</span><br><span class="line">                        deleniti, eaque enim fugiat illo in molestiae necessitatibus non obcaecati perferendis possimus</span><br><span class="line">                        temporibus tenetur.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">time</span> <span class="attr">class</span>=<span class="string">"tmtime"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>2016-04-01<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span>&gt;</span>12:30<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">time</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tmlabel"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Lorem ipsum dolor sit amet.<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Amet beatae cupiditate debitis</span><br><span class="line">                        doloribus eius eligendi, error est eveniet ipsam laborum laudantium magnam natus non omnis</span><br><span class="line">                        placeat praesentium quas repellat reprehenderit saepe soluta sunt temporibus totam vero</span><br><span class="line">                        voluptatem voluptatibus? Ab atque consequuntur cupiditate dolorum ducimus eligendi error eveniet</span><br><span class="line">                        excepturi facilis harum, in iste nihil obcaecati officiis, quas quasi qui quia quos reiciendis</span><br><span class="line">                        rem rerum sapiente totam unde voluptatibus voluptatum? Dolor dolore dolorum ducimus et fugit</span><br><span class="line">                        iusto modi odit quibusdam vitae voluptas!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">time</span> <span class="attr">class</span>=<span class="string">"tmtime"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>2016-03-21<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span>&gt;</span>11:30<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">time</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tmlabel"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit.<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. At dignissimos dolor dolores error</span><br><span class="line">                        quisquam vero, voluptatem. Accusantium consectetur consequuntur debitis dicta dolor dolores</span><br><span class="line">                        fugit laborum libero molestiae, natus nobis odit. Ab aliquid consequuntur, dolorum eius eligendi</span><br><span class="line">                        impedit ipsam neque odit, perspiciatis quis, similique unde voluptate! Corporis necessitatibus</span><br><span class="line">                        odit repellendus tempora.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">time</span> <span class="attr">class</span>=<span class="string">"tmtime"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>2016-02-11<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span>&gt;</span>9:45<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">time</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tmlabel"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing.<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Deleniti, dolorem id inventore iste</span><br><span class="line">                        odit perferendis provident? A cupiditate doloribus, enim et fuga iste nemo non nostrum omnis</span><br><span class="line">                        perspiciatis praesentium provident, quas repellendus rerum sit tempore voluptates. Aliquam</span><br><span class="line">                        distinctio fugit hic maiores ullam voluptate! Aspernatur autem blanditiis deleniti dolor dolores</span><br><span class="line">                        dolorum enim et illum ipsa iure laboriosam, natus officiis ullam voluptas?<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">time</span> <span class="attr">class</span>=<span class="string">"tmtime"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>2016-02-11<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span>&gt;</span>9:45<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">time</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tmlabel"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Voluptas?<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Error eum ex iusto magnam obcaecati.</span><br><span class="line">                        Adipisci deserunt dicta dolorem ea enim et eum labore laboriosam, quos reprehenderit sequi vero</span><br><span class="line">                        vitae voluptatum.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br></pre></td><td class="code"><pre><span class="line">*, *<span class="selector-pseudo">:after</span>, *<span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">-webkit-box-sizing</span>: border-box;</span><br><span class="line">    <span class="attribute">-moz-box-sizing</span>: border-box;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span>, <span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:before</span>,</span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">" "</span>;</span><br><span class="line">    <span class="attribute">display</span>: table;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">'Lato'</span>, Calibri, Arial, sans-serif;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#47a3da</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#f0f0f0</span>;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.main</span>,</span><br><span class="line"><span class="selector-class">.container</span> &gt; <span class="selector-tag">header</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">96%</span>;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">70em</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">2em</span> <span class="number">3em</span> <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span> &gt; <span class="selector-tag">header</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">3em</span> <span class="number">2em</span> <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span> &gt; <span class="selector-tag">header</span> <span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">media</span> screen and (max-width: <span class="number">55em</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.main</span>,</span><br><span class="line">    <span class="selector-class">.container</span> &gt; <span class="selector-tag">header</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">98%</span>;</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">2em</span> <span class="number">1em</span> <span class="number">2em</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.container</span> &gt; <span class="selector-tag">header</span> <span class="selector-tag">h1</span> &#123;</span><br><span class="line">        <span class="attribute">text-align</span>: center;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Timeline */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tmtimeline</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">30px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tmtimeline</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">20%</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#afdcf8</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tmtimeline</span> &gt; <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tmtimeline</span> &gt; <span class="selector-tag">li</span> <span class="selector-class">.tmtime</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">25%</span>;</span><br><span class="line">    <span class="attribute">padding-right</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tmtimeline</span> &gt; <span class="selector-tag">li</span> <span class="selector-class">.tmtime</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">text-align</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tmtimeline</span> &gt; <span class="selector-tag">li</span> <span class="selector-class">.tmtime</span> <span class="selector-tag">span</span><span class="selector-pseudo">:first-child</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">0.9em</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#bdd0db</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tmtimeline</span> &gt; <span class="selector-tag">li</span> <span class="selector-class">.tmtime</span> <span class="selector-tag">span</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">2.9em</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#3594cb</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tmtimeline</span> &gt; <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(odd)</span> <span class="selector-class">.tmtime</span> <span class="selector-tag">span</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#6cbfee</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tmtimeline</span> &gt; <span class="selector-tag">li</span> <span class="selector-class">.tmlabel</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">15px</span> <span class="number">25%</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">2em</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1.2em</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">300</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.4</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#3594cb</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tmtimeline</span> &gt; <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(odd)</span> <span class="selector-class">.tmlabel</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#6cbfee</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tmtimeline</span> &gt; <span class="selector-tag">li</span> <span class="selector-class">.tmlabel</span> <span class="selector-tag">h2</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="built_in">rgba</span>(255, 255, 255, 0.4);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tmtimeline</span> &gt; <span class="selector-tag">li</span> <span class="selector-class">.tmlabel</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">" "</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">pointer-events</span>: none;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">10px</span> solid transparent;</span><br><span class="line">    <span class="attribute">border-right-color</span>: <span class="number">#3594cb</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tmtimeline</span> &gt; <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(odd)</span> <span class="selector-class">.tmlabel</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">border-right-color</span>: <span class="number">#6cbfee</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">media</span> screen and (max-width: <span class="number">55em</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.tmtimeline</span> &gt; <span class="selector-tag">li</span> <span class="selector-class">.tmtime</span> &#123;</span><br><span class="line">        <span class="attribute">padding-right</span>: <span class="number">65px</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.tmtimeline</span> &gt; <span class="selector-tag">li</span> <span class="selector-class">.tmtime</span> <span class="selector-tag">span</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">1.5em</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">media</span> screen and (max-width: <span class="number">40em</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.tmtimeline</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">        <span class="attribute">display</span>: none;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.tmtimeline</span> &gt; <span class="selector-tag">li</span> <span class="selector-class">.tmtime</span> &#123;</span><br><span class="line">        <span class="attribute">position</span>: relative;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">20px</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.tmtimeline</span> &gt; <span class="selector-tag">li</span> <span class="selector-class">.tmtime</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">        <span class="attribute">text-align</span>: left;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.tmtimeline</span> &gt; <span class="selector-tag">li</span> <span class="selector-class">.tmlabel</span> &#123;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">30px</span> <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">1em</span>;</span><br><span class="line">        <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">95%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.tmtimeline</span> &gt; <span class="selector-tag">li</span> <span class="selector-class">.tmlabel</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">        <span class="attribute">top</span>: -<span class="number">20px</span>;</span><br><span class="line">        <span class="attribute">right</span>: auto;</span><br><span class="line">        <span class="attribute">left</span>: <span class="number">20px</span>;</span><br><span class="line">        <span class="attribute">border-right-color</span>: transparent;</span><br><span class="line">        <span class="attribute">border-bottom-color</span>: <span class="number">#3594cb</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.tmtimeline</span> &gt; <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(odd)</span> <span class="selector-class">.tmlabel</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">        <span class="attribute">border-right-color</span>: transparent;</span><br><span class="line">        <span class="attribute">border-bottom-color</span>: <span class="number">#6cbfee</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.tmtimeline</span> &gt; <span class="selector-tag">li</span> <span class="selector-class">.tmicon</span> &#123;</span><br><span class="line">        <span class="attribute">position</span>: relative;</span><br><span class="line">        <span class="attribute">float</span>: right;</span><br><span class="line">        <span class="attribute">left</span>: auto;</span><br><span class="line">        <span class="attribute">margin</span>: -<span class="number">55px</span> <span class="number">5px</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="normalize"><a href="#normalize" class="headerlink" title="normalize"></a>normalize</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Change the default font family in all browsers (opinionated).</span></span><br><span class="line"><span class="comment"> * 2. Prevent adjustments of font size after orientation changes in IE and iOS.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: sans-serif; <span class="comment">/* 1 */</span></span><br><span class="line">    <span class="attribute">-ms-text-size-adjust</span>: <span class="number">100%</span>; <span class="comment">/* 2 */</span></span><br><span class="line">    <span class="attribute">-webkit-text-size-adjust</span>: <span class="number">100%</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Remove the margin in all browsers (opinionated).</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* HTML5 display definitions</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Add the correct display in IE 9-.</span></span><br><span class="line"><span class="comment"> * 1. Add the correct display in Edge, IE, and Firefox.</span></span><br><span class="line"><span class="comment"> * 2. Add the correct display in IE.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">article</span>,</span><br><span class="line"><span class="selector-tag">aside</span>,</span><br><span class="line"><span class="selector-tag">details</span>, <span class="comment">/* 1 */</span></span><br><span class="line"><span class="selector-tag">figcaption</span>,</span><br><span class="line"><span class="selector-tag">figure</span>,</span><br><span class="line"><span class="selector-tag">footer</span>,</span><br><span class="line"><span class="selector-tag">header</span>,</span><br><span class="line"><span class="selector-tag">main</span>, <span class="comment">/* 2 */</span></span><br><span class="line"><span class="selector-tag">menu</span>,</span><br><span class="line"><span class="selector-tag">nav</span>,</span><br><span class="line"><span class="selector-tag">section</span>,</span><br><span class="line"><span class="selector-tag">summary</span> &#123; <span class="comment">/* 1 */</span></span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Add the correct display in IE 9-.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">audio</span>,</span><br><span class="line"><span class="selector-tag">canvas</span>,</span><br><span class="line"><span class="selector-tag">progress</span>,</span><br><span class="line"><span class="selector-tag">video</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Add the correct display in iOS 4-7.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">audio</span><span class="selector-pseudo">:not(</span><span class="selector-attr">[controls]</span>) &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Add the correct vertical alignment in Chrome, Firefox, and Opera.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">progress</span> &#123;</span><br><span class="line">    <span class="attribute">vertical-align</span>: baseline;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Add the correct display in IE 10-.</span></span><br><span class="line"><span class="comment"> * 1. Add the correct display in IE.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">template</span>, <span class="comment">/* 1 */</span></span><br><span class="line"><span class="selector-attr">[hidden]</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Links</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Remove the gray background on active links in IE 10.</span></span><br><span class="line"><span class="comment"> * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: transparent; <span class="comment">/* 1 */</span></span><br><span class="line">    <span class="attribute">-webkit-text-decoration-skip</span>: objects; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Remove the outline on focused links when they are also active or hovered</span></span><br><span class="line"><span class="comment"> * in all browsers (opinionated).</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span>,</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">outline-width</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Text-level semantics</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Remove the bottom border in Firefox 39-.</span></span><br><span class="line"><span class="comment"> * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">abbr</span><span class="selector-attr">[title]</span> &#123;</span><br><span class="line">    <span class="attribute">border-bottom</span>: none; <span class="comment">/* 1 */</span></span><br><span class="line">    <span class="attribute">text-decoration</span>: underline; <span class="comment">/* 2 */</span></span><br><span class="line">    <span class="attribute">text-decoration</span>: underline dotted; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Prevent the duplicate application of `bolder` by the next rule in Safari 6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">b</span>,</span><br><span class="line"><span class="selector-tag">strong</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: inherit;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Add the correct font weight in Chrome, Edge, and Safari.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">b</span>,</span><br><span class="line"><span class="selector-tag">strong</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: bolder;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Add the correct font style in Android 4.3-.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">dfn</span> &#123;</span><br><span class="line">    <span class="attribute">font-style</span>: italic;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Correct the font size and margin on `h1` elements within `section` and</span></span><br><span class="line"><span class="comment"> * `article` contexts in Chrome, Firefox, and Safari.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">2em</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0.67em</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Add the correct background and color in IE 9-.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">mark</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ff0</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Add the correct font size in all browsers.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">small</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">80%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Prevent `sub` and `sup` elements from affecting the line height in</span></span><br><span class="line"><span class="comment"> * all browsers.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">sub</span>,</span><br><span class="line"><span class="selector-tag">sup</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">75%</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">vertical-align</span>: baseline;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">sub</span> &#123;</span><br><span class="line">    <span class="attribute">bottom</span>: -<span class="number">0.25em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">sup</span> &#123;</span><br><span class="line">    <span class="attribute">top</span>: -<span class="number">0.5em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Embedded content</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Remove the border on images inside links in IE 10-.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">border-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Hide the overflow in IE.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">svg</span><span class="selector-pseudo">:not(</span><span class="selector-pseudo">:root)</span> &#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Grouping content</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Correct the inheritance and scaling of font size in all browsers.</span></span><br><span class="line"><span class="comment"> * 2. Correct the odd `em` font sizing in all browsers.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">code</span>,</span><br><span class="line"><span class="selector-tag">kbd</span>,</span><br><span class="line"><span class="selector-tag">pre</span>,</span><br><span class="line"><span class="selector-tag">samp</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: monospace, monospace; <span class="comment">/* 1 */</span></span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1em</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Add the correct margin in IE 8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">figure</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">1em</span> <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Add the correct box sizing in Firefox.</span></span><br><span class="line"><span class="comment"> * 2. Show the overflow in Edge and IE.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">hr</span> &#123;</span><br><span class="line">    <span class="attribute">box-sizing</span>: content-box; <span class="comment">/* 1 */</span></span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>; <span class="comment">/* 1 */</span></span><br><span class="line">    <span class="attribute">overflow</span>: visible; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Forms</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Change font properties to `inherit` in all browsers (opinionated).</span></span><br><span class="line"><span class="comment"> * 2. Remove the margin in Firefox and Safari.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line"><span class="selector-tag">input</span>,</span><br><span class="line"><span class="selector-tag">select</span>,</span><br><span class="line"><span class="selector-tag">textarea</span> &#123;</span><br><span class="line">    <span class="attribute">font</span>: inherit; <span class="comment">/* 1 */</span></span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Restore the font weight unset by the previous rule.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">optgroup</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Show the overflow in IE.</span></span><br><span class="line"><span class="comment"> * 1. Show the overflow in Edge.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line"><span class="selector-tag">input</span> &#123; <span class="comment">/* 1 */</span></span><br><span class="line">    <span class="attribute">overflow</span>: visible;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Remove the inheritance of text transform in Edge, Firefox, and IE.</span></span><br><span class="line"><span class="comment"> * 1. Remove the inheritance of text transform in Firefox.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line"><span class="selector-tag">select</span> &#123; <span class="comment">/* 1 */</span></span><br><span class="line">    <span class="attribute">text-transform</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`</span></span><br><span class="line"><span class="comment"> *    controls in Android 4.</span></span><br><span class="line"><span class="comment"> * 2. Correct the inability to style clickable types in iOS and Safari.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line"><span class="selector-tag">html</span> <span class="selector-attr">[type="button"]</span>, <span class="comment">/* 1 */</span></span><br><span class="line"><span class="selector-attr">[type="reset"]</span>,</span><br><span class="line"><span class="selector-attr">[type="submit"]</span> &#123;</span><br><span class="line">    <span class="attribute">-webkit-appearance</span>: button; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Remove the inner border and padding in Firefox.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span><span class="selector-pseudo">::-moz-focus-inner</span>,</span><br><span class="line"><span class="selector-attr">[type="button"]</span><span class="selector-pseudo">::-moz-focus-inner</span>,</span><br><span class="line"><span class="selector-attr">[type="reset"]</span><span class="selector-pseudo">::-moz-focus-inner</span>,</span><br><span class="line"><span class="selector-attr">[type="submit"]</span><span class="selector-pseudo">::-moz-focus-inner</span> &#123;</span><br><span class="line">    <span class="attribute">border-style</span>: none;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Restore the focus styles unset by the previous rule.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span><span class="selector-pseudo">:-moz-focusring</span>,</span><br><span class="line"><span class="selector-attr">[type="button"]</span><span class="selector-pseudo">:-moz-focusring</span>,</span><br><span class="line"><span class="selector-attr">[type="reset"]</span><span class="selector-pseudo">:-moz-focusring</span>,</span><br><span class="line"><span class="selector-attr">[type="submit"]</span><span class="selector-pseudo">:-moz-focusring</span> &#123;</span><br><span class="line">    <span class="attribute">outline</span>: <span class="number">1px</span> dotted ButtonText;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Change the border, margin, and padding in all browsers (opinionated).</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">fieldset</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#c0c0c0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0.35em</span> <span class="number">0.625em</span> <span class="number">0.75em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Correct the text wrapping in Edge and IE.</span></span><br><span class="line"><span class="comment"> * 2. Correct the color inheritance from `fieldset` elements in IE.</span></span><br><span class="line"><span class="comment"> * 3. Remove the padding so developers are not caught out when they zero out</span></span><br><span class="line"><span class="comment"> *    `fieldset` elements in all browsers.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">legend</span> &#123;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box; <span class="comment">/* 1 */</span></span><br><span class="line">    <span class="attribute">color</span>: inherit; <span class="comment">/* 2 */</span></span><br><span class="line">    <span class="attribute">display</span>: table; <span class="comment">/* 1 */</span></span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">100%</span>; <span class="comment">/* 1 */</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>; <span class="comment">/* 3 */</span></span><br><span class="line">    <span class="attribute">white-space</span>: normal; <span class="comment">/* 1 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Remove the default vertical scrollbar in IE.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">textarea</span> &#123;</span><br><span class="line">    <span class="attribute">overflow</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Add the correct box sizing in IE 10-.</span></span><br><span class="line"><span class="comment"> * 2. Remove the padding in IE 10-.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[type="checkbox"]</span>,</span><br><span class="line"><span class="selector-attr">[type="radio"]</span> &#123;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box; <span class="comment">/* 1 */</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Correct the cursor style of increment and decrement buttons in Chrome.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[type="number"]</span><span class="selector-pseudo">::-webkit-inner-spin-button</span>,</span><br><span class="line"><span class="selector-attr">[type="number"]</span><span class="selector-pseudo">::-webkit-outer-spin-button</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Correct the odd appearance in Chrome and Safari.</span></span><br><span class="line"><span class="comment"> * 2. Correct the outline style in Safari.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[type="search"]</span> &#123;</span><br><span class="line">    <span class="attribute">-webkit-appearance</span>: textfield; <span class="comment">/* 1 */</span></span><br><span class="line">    <span class="attribute">outline-offset</span>: -<span class="number">2px</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[type="search"]</span><span class="selector-pseudo">::-webkit-search-cancel-button</span>,</span><br><span class="line"><span class="selector-attr">[type="search"]</span><span class="selector-pseudo">::-webkit-search-decoration</span> &#123;</span><br><span class="line">    <span class="attribute">-webkit-appearance</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Correct the text style of placeholders in Chrome, Edge, and Safari.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-pseudo">::-webkit-input-placeholder</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: inherit;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.54</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Correct the inability to style clickable types in iOS and Safari.</span></span><br><span class="line"><span class="comment"> * 2. Change font properties to `inherit` in Safari.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-pseudo">::-webkit-file-upload-button</span> &#123;</span><br><span class="line">    <span class="attribute">-webkit-appearance</span>: button; <span class="comment">/* 1 */</span></span><br><span class="line">    <span class="attribute">font</span>: inherit; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;慕课网响应式布局教程 - 时间轴实战&lt;/p&gt;
    
    </summary>
    
      <category term="布局艺术" scheme="http://www.i7xy.cn/categories/%E5%B8%83%E5%B1%80%E8%89%BA%E6%9C%AF/"/>
    
    
      <category term="CSS" scheme="http://www.i7xy.cn/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>display: inline-block 导致换行</title>
    <link href="http://www.i7xy.cn/2018/10/02/display-inline-block-%E5%AF%BC%E8%87%B4%E6%8D%A2%E8%A1%8C/"/>
    <id>http://www.i7xy.cn/2018/10/02/display-inline-block-导致换行/</id>
    <published>2018-10-02T12:33:26.000Z</published>
    <updated>2019-01-28T12:17:03.427Z</updated>
    
    <content type="html"><![CDATA[<p><code>display: inline-block</code> 时候，70% + 30% &gt; 100%</p><a id="more"></a><p><strong>换行原因</strong>:标签与标签之间的换行会占据一定大小。</p><p>比如:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>`display: inline-block`导致换行<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    * &#123;</span></span><br><span class="line"><span class="undefined">      margin: 0;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.containter</span> <span class="selector-class">.item</span><span class="selector-pseudo">:nth-child(1)</span> &#123;</span></span><br><span class="line"><span class="undefined">      display: inline-block;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">width</span>: 33<span class="selector-class">.3333333333333333333</span>%;</span></span><br><span class="line"><span class="undefined">      background-color: red;</span></span><br><span class="line"><span class="undefined">      height: 100px;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.containter</span> <span class="selector-class">.item</span><span class="selector-pseudo">:nth-child(2)</span> &#123;</span></span><br><span class="line"><span class="undefined">      display: inline-block;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">width</span>: 33<span class="selector-class">.3333333333333333333</span>%;</span></span><br><span class="line"><span class="undefined">      background-color: yellow;</span></span><br><span class="line"><span class="undefined">      height: 100px;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.containter</span> <span class="selector-class">.item</span><span class="selector-pseudo">:nth-child(3)</span> &#123;</span></span><br><span class="line"><span class="undefined">      display: inline-block;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">width</span>: 33<span class="selector-class">.3333333333333333333</span>%;</span></span><br><span class="line"><span class="undefined">      background-color: blue;</span></span><br><span class="line"><span class="undefined">      height: 100px;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"containter"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 因为item div之后的换行导致 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.loli.net/2018/10/02/5bb364c011498.png" alt="显示结果"></p><p>解决方法:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.containter</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/10/02/5bb36569c0340.png" alt="解决方法"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;display: inline-block&lt;/code&gt; 时候，70% + 30% &amp;gt; 100%&lt;/p&gt;
    
    </summary>
    
      <category term="布局艺术" scheme="http://www.i7xy.cn/categories/%E5%B8%83%E5%B1%80%E8%89%BA%E6%9C%AF/"/>
    
    
      <category term="CSS" scheme="http://www.i7xy.cn/tags/CSS/"/>
    
  </entry>
  
</feed>
